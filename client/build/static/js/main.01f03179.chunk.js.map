{"version":3,"sources":["components/googleLogin.js","components/InputImageGenerique.jsx","components/menuDeroulant/erp.js","components/inputAutocompletGenerique.jsx","components/inputRH.js","components/inputCollaborateur.js","components/end.js","App.js","serviceWorker.js","index.js"],"names":["Google","setDataFromAPI","history","useHistory","responseGoogle","response","a","rt","$t","emailResponse","axios","post","email","then","res","data","split","replace","nomPrenom","localStorage","setItem","getItem","push","Image","style","marginTop","src","size","centered","Container","Segment","textAlign","className","icon","clientId","render","renderProps","onClick","disabled","buttonText","onSuccess","onFailure","cookiePolicy","InputImageGenerique","informations","setInformations","title","name","handleChangeFile","disable","useState","previewImage","setPreviewImage","Grid","Column","type","onChange","e","URL","createObjectURL","target","files","Icon","color","key","text","value","ERP","informationsRH","handleChange","Dropdown","placeholder","fluid","erp","selection","options","InputAutocompletGenerique","url","setData","useEffect","get","result","fetchData","search","InputRh","dataFromAPI","updateCollaborateur","updateFileCollaborateur","materiels","contrat","declaration","fichedeposte","fichesynthetique","avantagesennature","mutuelle","onboarding","fonctiondigitalsecondaire","datePriseDeFonction","telephonetravail","telephonemobile","adressetravail","classification","niveau","coefficient","indice","remunerationbrutemensuelle","remunerationbrutejournaliere","remunerationbruteannuelle","remunerationbrutehoraire","nombreheureshebdomadairedusalarie","nombreheuresmensueldusalarie","activite","emailresponsable","etablissement","juridique","collaborateur","fonctiondigital","convention","naturetravail","tempstravail","updateRh","setUpdateRh","updateFileRh","setUpdateFileRh","organizations","description","customSchemas","Attributs_supplementaires","Fonction_digitale_principale","Fonction_digitale_minuscules","map","relations","Etablissement_digital","Attributs_personnaliss","Date_de_la_prise_de_fonction","Activits","Structure_Jurdique","phones","Nature_de_la_relation_de_travail","Classification","Temps_de_travail","Niveau","Convention_collective","Coefficient","Indice","Rmunration_brute_annuelle2","Nombre_dheures_mensuel_du_salari","Rmunration_brute_mensuelle","Rmunration_brute_horaire","Rmunration_brute_journalire","Nombre_dheures_hebdomadaire_du_salari","Formation_ERP_Scurit_Incendie","sendDataRH","i","object","Object","assign","object2","keys","FormData","append","method","console","log","errors","columns","Row","Label","circular","Form","Input","label","divided","Button","primary","Presentation","_id","prenom","nom","genre","nomnaissance","datenaissance","villedenaissance","nationalite","numerosecurite","ville","addresse","cp","telephonePerso","telephoneDomicile","telephoneUrgence","rpps","numeroDepartemental","departementConseil","specialitePratiquee","carnetVaccination","carteIdentitePassport","carteVital","cv","permisConduire","assuranceAutomobile","photo","RIB","conseildelordre","ONCD","diplomes","diplomesRh","RCP","radioProtectionPatients","radioProtectionTravailleurs","matériels","déclaration","adli","aptitudeMedicale","attestationAssuranceHabitation","autreContratsTravailCours","lettreMotivation","carteSejour","casierJudiciaire","message","setMessage","collabo","setCollabo","update","setUpdate","updateFile","setUpdateFile","valueEmail","setValueEmail","dataCollaborateurs","setDataCollaborateurs","visible","setVisible","isCollabo","givenName","familyName","Sexe","Date_de_naissance","Adresse_personnel","Code_postal_personnel","Commune_personnel","Lieu_de_naissance","Scurit_sociale","Nationalit","emails","address","Tlphone_portable_personnel","Tlphone_domicile","Tlphone__appeler_en_cas_durgence","buttonRedirect","buttonRedirectRh","sendData","Menu","children","Item","position","Sidebar","Pushable","as","animation","inverted","onHide","vertical","width","Pusher","dimmed","Radio","checked","id","Message","positive","Header","End","setTimeout","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.01f03179.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Image, Segment } from \"semantic-ui-react\";\nimport GoogleLogin from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Google({ setDataFromAPI }) {\n  let history = useHistory();\n  //Envoie de la donnée au back//\n  // Utilisation du localStorage pour sauvergarder email apres le click du button google//\n  const responseGoogle = async (response) => {\n    const emailResponse = await response.rt.$t;\n    //envoie EMAIL RESPONSE  A DIMITRI//\n    await axios\n      .post(\n        \"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\",\n        { email: emailResponse }\n      )\n      .then((res) => {\n        setDataFromAPI(res.data);\n      });\n\n    const nomPrenom = await emailResponse.split(\"@\")[0].replace(\".\", \"/\");\n    localStorage.setItem(\"name\", emailResponse);\n    await axios\n      .post(\"http://localhost:3000/gestionPerso\", {\n        email: localStorage.getItem(\"name\"),\n      })\n      .then((response) => {\n        {\n          history.push(`/collaborateur/${nomPrenom}`);\n        }\n      });\n  };\n  return (\n    <div>\n      <Image\n        style={{ marginTop: 100 }}\n        src=\"./Doctegestio.png\"\n        size=\"medium\"\n        centered=\"true\"\n      />\n      <Image\n        src=\"./pcDocte.png\"\n        style={{ marginTop: 30 }}\n        size=\"small\"\n        centered=\"true\"\n      />\n      <Container>\n        <Segment style={{ marginTop: 30 }}>\n          <p style={{ textAlign: \"center\" }}>\n            Nous avons besoin de vous authentifier pour vous donner l'accès à\n            l'application.\n          </p>\n          <div className=\"google\">\n            <GoogleLogin\n              icon=\"false\"\n              clientId=\"939765445894-gkfl9fd7gpd2vehkhdp1ju8g7760p2ca.apps.googleusercontent.com\"\n              render={(renderProps) => (\n                <button\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  Se connecter avec Doctegestio\n                </button>\n              )}\n              buttonText=\"Login\"\n              onSuccess={responseGoogle}\n              onFailure={responseGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          </div>\n        </Segment>\n      </Container>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport { Grid, Segment, Icon } from 'semantic-ui-react'\n\nexport default function InputImageGenerique({ informations, setInformations, title, name, handleChangeFile, disable }) {\n    const [previewImage, setPreviewImage] = useState(\"\")\n    const deleteImage = () => {\n        setPreviewImage(\"\")\n        setInformations({ ...informations, [name]: \"\" })\n    }\n    // NE PAS OUBLIER DE FAIRE LA CONDITION  L 24 //\n    return (\n        <Grid.Column>\n            <Segment textAlign='center'>{title}</Segment>\n            <input\n                type=\"file\"\n                name={name}\n                disabled={disable}\n                onChange={(e) => {\n                    handleChangeFile(e)\n                    setPreviewImage(URL.createObjectURL(e.target.files[0]))\n                }}\n            />\n            <div className=\"closeImage\">\n                <Icon name='close' color=\"red\" className=\"icon-cross\" onClick={deleteImage} />\n                <img src={previewImage || `http://localhost:3000/static/${informations[name]}`} />\n            </div>\n\n        </Grid.Column>\n    )\n}\n","import React from 'react'\nimport { Dropdown, Grid } from 'semantic-ui-react'\n\nconst data = [\n    {\n        key: \"Oui\",\n        text: \"Oui\",\n        value: \"Oui\",\n    },\n    {\n        key: \"Non\",\n        text: \"Non\",\n        value: \"Non\",\n    },\n]\n\nexport default function ERP({ informations, informationsRH, handleChange, disable }) {\n    return (\n        <Grid>\n            <div className='autoCompletTitre'>Formation ERP Sécurité Incendie</div>\n            <Dropdown\n                placeholder='Formation ERP Sécurité Incendie'\n                name=\"erp\"\n                onChange={handleChange}\n                fluid\n                disabled={disable}\n                value={informations.erp || informationsRH.erp}\n                selection\n                options={data}\n            />\n        </Grid>\n    )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Dropdown } from 'semantic-ui-react'\nimport axios from 'axios'\n\nexport default function InputAutocompletGenerique({ url, informations, informationsRH, title, name, handleChange, disable }) {\n    const [data, setData] = useState([])\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios.get(\n                url ,\n            );\n            setData(result.data);\n        };\n        fetchData();\n    }, []);\n\n\n    return (\n        <Grid>\n            <div className='autoCompletTitre'>{title}</div>\n            <Dropdown\n                onChange={handleChange}\n                placeholder={title}\n                fluid\n                search\n                name={name}\n                disabled={disable}\n                selection\n                value={informations[name] || informationsRH[name]}\n                options={data}\n            />\n        </Grid>\n    )\n}\n\n\n//Mettre le [Name] selectionne le props//","import React, { useState, useEffect } from 'react'\nimport { Grid, Container, Form, Label, Button } from 'semantic-ui-react'\nimport { useHistory } from \"react-router-dom\";\nimport ERP from './menuDeroulant/erp'\nimport axios from 'axios'\nimport InputImageGenerique from './InputImageGenerique';\nimport InputAutocompletGenerique from './inputAutocompletGenerique';\n\nexport default function InputRh({ dataFromAPI, disable, informationsRH, updateCollaborateur, updateFileCollaborateur }) {\n    const [informations, setInformations] = useState({\n        materiels: \"\",\n        contrat: \"\",\n        declaration: \"\",\n        fichedeposte: \"\",\n        fichesynthetique: \"\",\n        avantagesennature: \"\",\n        mutuelle: \"\",\n        onboarding: \"\",\n        fonctiondigitalsecondaire: \"\",\n        datePriseDeFonction: \"\",\n        telephonetravail: \"\",\n        telephonemobile: \"\",\n        adressetravail: \"\",\n        classification: \"\",\n        niveau: \"\",\n        coefficient: \"\",\n        indice: \"\",\n        remunerationbrutemensuelle: \"\",\n        remunerationbrutejournaliere: \"\",\n        remunerationbruteannuelle: \"\",\n        remunerationbrutehoraire: \"\",\n        nombreheureshebdomadairedusalarie: \"\",\n        nombreheuresmensueldusalarie: \"\",\n        /* COMPONENT 'autocomplet' */\n        activite: \"\",\n        emailresponsable: \"\",\n        etablissement: \"\",\n        juridique: \"\",\n        collaborateur: \"\",\n        fonctiondigital: \"\",\n        /* COMPONENT 'menuderoulant' */\n        convention: \"\",\n        erp: \"\",\n        naturetravail: \"\",\n        tempstravail: \"\"\n    })\n\n    let history = useHistory();\n\n    const [updateRh, setUpdateRh] = useState()\n    const [updateFileRh, setUpdateFileRh] = useState()\n\n    useEffect(() => {\n        setInformations({\n            collaborateur: dataFromAPI.organizations ? dataFromAPI.organizations[0].description : \"\",\n            fonctiondigital: dataFromAPI.customSchemas.Attributs_supplementaires.Fonction_digitale_principale ? dataFromAPI.customSchemas.Attributs_supplementaires.Fonction_digitale_principale : \"\",\n            fonctiondigitalsecondaire: dataFromAPI.customSchemas.Attributs_supplementaires.Fonction_digitale_minuscules ? dataFromAPI.customSchemas.Attributs_supplementaires.Fonction_digitale_minuscules.map(e => e.value) : \"\",\n            emailresponsable: dataFromAPI.relations ? dataFromAPI.relations[0].type : \"\",\n            etablissement: dataFromAPI.customSchemas.Attributs_supplementaires.Etablissement_digital ? dataFromAPI.customSchemas.Attributs_supplementaires.Etablissement_digital : \"\",\n            datePriseDeFonction: dataFromAPI.customSchemas.Attributs_personnaliss.Date_de_la_prise_de_fonction ? dataFromAPI.customSchemas.Attributs_personnaliss.Date_de_la_prise_de_fonction : \"\",\n            activite: dataFromAPI.customSchemas.Attributs_supplementaires.Activits ? dataFromAPI.customSchemas.Attributs_supplementaires.Activits[0].value : \"\",\n            juridique: dataFromAPI.customSchemas.Attributs_supplementaires.Structure_Jurdique ? dataFromAPI.customSchemas.Attributs_supplementaires.Structure_Jurdique : \"\",\n            telephonetravail: dataFromAPI.phones.value ? dataFromAPI.phones[1].value : \"\",\n            naturetravail: dataFromAPI.customSchemas.Attributs_personnaliss.Nature_de_la_relation_de_travail ? dataFromAPI.customSchemas.Attributs_personnaliss.Nature_de_la_relation_de_travail : \"\",\n            classification: dataFromAPI.customSchemas.Attributs_personnaliss.Classification ? dataFromAPI.customSchemas.Attributs_personnaliss.Classification : \"\",\n            // telephonemobile: dataFromAPI.phones ? dataFromAPI.phones[2].value : \"\",\n            tempstravail: dataFromAPI.customSchemas.Attributs_personnaliss.Temps_de_travail ? dataFromAPI.customSchemas.Attributs_personnaliss.Temps_de_travail : \"\",\n            niveau: dataFromAPI.customSchemas.Attributs_personnaliss.Niveau ? dataFromAPI.customSchemas.Attributs_personnaliss.Niveau : \"\",\n            // adressetravail: dataFromAPI.addresses ? dataFromAPI.addresses[1].formatted : \"\",\n            convention: dataFromAPI.customSchemas.Attributs_personnaliss.Convention_collective ? dataFromAPI.customSchemas.Attributs_personnaliss.Convention_collective : \"\",\n            coefficient: dataFromAPI.customSchemas.Attributs_personnaliss.Coefficient ? dataFromAPI.customSchemas.Attributs_personnaliss.Coefficient : \"\",\n            indice: dataFromAPI.customSchemas.Attributs_personnaliss.Indice ? dataFromAPI.customSchemas.Attributs_personnaliss.Indice : \"\",\n            remunerationbruteannuelle: dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_annuelle2 ? dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_annuelle2 : \"\",\n            nombreheuresmensueldusalarie: dataFromAPI.customSchemas.Attributs_personnaliss.Nombre_dheures_mensuel_du_salari ? dataFromAPI.customSchemas.Attributs_personnaliss.Nombre_dheures_mensuel_du_salari : \"\",\n            remunerationbrutemensuelle: dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_mensuelle ? dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_mensuelle : \"\",\n            remunerationbrutehoraire: dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_horaire ? dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_horaire : \"\",\n            remunerationbrutejournaliere: dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_journalire ? dataFromAPI.customSchemas.Attributs_personnaliss.Rmunration_brute_journalire : \"\",\n            nombreheureshebdomadairedusalarie: dataFromAPI.customSchemas.Attributs_personnaliss.Nombre_dheures_hebdomadaire_du_salari ? dataFromAPI.customSchemas.Attributs_personnaliss.Nombre_dheures_hebdomadaire_du_salari : \"\",\n            erp: dataFromAPI.customSchemas.Attributs_personnaliss.Formation_ERP_Scurit_Incendie ? dataFromAPI.customSchemas.Attributs_personnaliss.Formation_ERP_Scurit_Incendie : \"\",\n        })\n    }, [dataFromAPI])\n\n    const handleChange = (e, { value, name }) => {\n        setInformations({ ...informations, [e.target.name || name]: value })\n        setUpdateRh({ ...updateRh, [e.target.name || name]: value })\n    }\n\n    const handleChangeFile = (e) => {\n        setInformations({ ...informations, [e.target.name]: e.target.files[0] })\n        setUpdateFileRh({ ...updateFileRh, [e.target.name]: e.target.files[0] })\n    }\n\n    const sendDataRH = async () => {\n        //Fusionner les deux states des deux composants de input//\n        try {\n            const object = Object.assign(updateCollaborateur, updateRh);\n            const object2 = Object.assign(updateFileCollaborateur, updateFileRh);\n            const keys = Object.keys(object2)\n            const data = new FormData()\n            for (const i in keys) {\n                data.append(keys[i], object2[keys[i]])\n            }\n            const response = await axios({\n                method: 'post',\n                url: 'https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/updateGSuiteUser',\n                data: object\n            })\n            const responseFile = await axios({\n                method: 'post',\n                url: 'http://localhost:3000/file',\n                data: data\n            })\n            setUpdateRh({})\n        } catch (error) {\n            console.log(\"Error\", error.response.data.errors)\n        }\n        history.push('/ok')\n    }\n    return (\n        <Container>\n            <Grid columns={2}>\n                <Grid.Row>\n                    <Label circular size='massive'>2</Label>\n                    <h3>Informations à remplir par gestionpersonnel</h3>\n                </Grid.Row>\n            </Grid>\n            <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <InputAutocompletGenerique url='http://localhost:3000/collaborateurData' title='Type de collaborateur' name='collaborateur' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                        <InputAutocompletGenerique url='http://localhost:3000/emailData' title='Adresse e-mail du responsable' name='emailresponsable' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                        <InputAutocompletGenerique url='http://localhost:3000/activiteData' title='Activite' name='activite' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <InputAutocompletGenerique url='http://localhost:3000/fonctionData' title='Fonction digitale principale' name='fonctiondigital' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                        <InputAutocompletGenerique url='http://localhost:3000/etablissementData' title='Etablissement digital' name='etablissement' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                        <InputAutocompletGenerique url='http://localhost:3000/juridiqueData' title='Structure Juridique' name='juridique' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Input fluid name='fonctiondigitalsecondaire' value={informations.fonctiondigitalsecondaire || informationsRH.fonctiondigitalsecondaire} onChange={handleChange} label='Fonction(s) digitale(s) secondaire(s)' placeholder='Fonction(s) digitale(s) secondaire(s)' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name=' datePriseDeFonction' value={informations.datePriseDeFonction || informationsRH.datePriseDeFonction} onChange={handleChange} label='Date de prise de fonction' placeholder='Date de prise de fonction' disabled={disable} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Form.Input fluid name='telephonetravail' value={informations.telephonetravail || informationsRH.telephonetravail} onChange={handleChange} label='Téléphone (Travail)' placeholder='Téléphone (Travail)' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='telephonemobile' value={informations.telephonemobile || informationsRH.telephonemobile} onChange={handleChange} label='Téléphone (Mobile)' placeholder='Téléphone (Mobile)' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='adressetravail' value={informations.adressetravail || informationsRH.adressetravail} onChange={handleChange} label='Adresse (Travail)' placeholder='Adresse (Travail)' disabled={disable} />\n                        <br />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <InputAutocompletGenerique url='http://localhost:3000/natureData' title='Nature de la relation de travail' name='naturetravail' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                        <InputAutocompletGenerique url='http://localhost:3000/travailData' title='Temps travail' name='tempstravail' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                        <InputAutocompletGenerique url='http://localhost:3000/conventionData' title='Convention Collective' name='convention' informations={informations} informationsRH={informationsRH} handleChange={handleChange} disable={disable} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Input fluid name='classification' onChange={handleChange} value={informations.classification || informationsRH.classification} label='Classification' placeholder='Classification' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='niveau' onChange={handleChange} value={informations.niveau || informationsRH.niveau} label='Niveau' placeholder='Niveau' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='coefficient' onChange={handleChange} value={informations.coefficient || informationsRH.coefficient} label='Coefficient' placeholder='Coefficient' disabled={disable} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Form.Input fluid name='indice' value={informations.indice || informationsRH.indice} onChange={handleChange} label='Indice' placeholder='Indice' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='remunerationbrutemensuelle' value={informations.remunerationbrutemensuelle || informationsRH.remunerationbrutemensuelle} onChange={handleChange} label='Rémunération brute mensuelle' placeholder='Rémunération brute mensuelle' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='remunerationbrutejournaliere' value={informations.remunerationbrutejournaliere || informationsRH.remunerationbrutejournaliere} onChange={handleChange} label='Rémunération brute journalière' placeholder='Rémunération brute journalière' disabled={disable} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Input fluid name='remunerationbruteannuelle' value={informations.remunerationbruteannuelle || informationsRH.remunerationbruteannuelle} onChange={handleChange} label='Rémunération brute annuelle' placeholder='Rémunération brute annuelle' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='remunerationbrutehoraire' value={informations.remunerationbrutehoraire || informationsRH.remunerationbrutehoraire} onChange={handleChange} label='Rémunération brute horaire' placeholder='Rémunération brute horaire' disabled={disable} />\n                        <br />\n                        <Form.Input fluid name='nombreheureshebdomadairedusalarie' value={informations.nombreheureshebdomadairedusalarie || informationsRH.nombreheureshebdomadairedusalarie} onChange={handleChange} label=\"Nombre d'heures hebdomadaire du salarié\" placeholder=\"Nombre d'heures hebdomadaire du salarié\" disabled={disable} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Input fluid name='nombreheuresmensueldusalarie' value={informations.nombreheuresmensueldusalarie || informationsRH.nombreheureshebdomadairedusalarie} onChange={handleChange} label=\"Nombre d'heures mensuel du salarié\" placeholder=\"Nombre d'heures mensuel du salarié\" disabled={disable} />\n                        <br />\n                        <ERP handleChange={handleChange} informations={informations} informationsRH={informationsRH} disable={disable} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Form>\n                <h3>Documents à fournir par gestionpersonnel (10/30)</h3>\n\n                <Grid columns={3} divided>\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Chartes d'utilisation de matériels et pratiques\" handleChangeFile={handleChangeFile} name={\"materiels\"} />\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Contrat de travail ou contrat de prestation ou convention de stage et promesse d'embauche\" handleChangeFile={handleChangeFile} name={\"contrat\"} />\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Déclaration préalable à l'embauche (DPAE)\" handleChangeFile={handleChangeFile} name={\"declaration\"} />\n                </Grid>\n                <Grid columns={3} divided>\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Fiche de poste\" handleChangeFile={handleChangeFile} name={\"fichedeposte\"} />\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Fiche signalétique synthétique\" handleChangeFile={handleChangeFile} name={\"fichesynthetique\"} />\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Mise à disposition d'avantages en nature\" handleChangeFile={handleChangeFile} name={\"avantagesennature\"} />\n                </Grid>\n                <Grid columns={3} divided>\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Mutuelle et prévoyance\" handleChangeFile={handleChangeFile} name={\"mutuelle\"} />\n                    <InputImageGenerique disable={disable} informations={informations} setInformations={setInformations} title=\"Onboarding\" handleChangeFile={handleChangeFile} name={\"onboarding\"} />\n                </Grid>\n                {disable !== true ? <Button primary onClick={sendDataRH} >Enregistrer les données</Button> : null}\n            </Form>\n\n        </Container>\n\n    )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport InputImageGenerique from './InputImageGenerique';\nimport InputRH from './inputRH'\nimport { useHistory } from \"react-router-dom\";\nimport { Menu, Dropdown, Form, Container, Grid, Segment, Button, Message, Image, Label, Sidebar, Icon, Header, Checkbox } from 'semantic-ui-react'\n\n\n\nexport default function Presentation({ dataFromAPI, setDataFromAPI }) {\n    const [informations, setInformations] = useState({\n        _id: \"\",\n        prenom: \"\",\n        nom: \"\",\n        genre: \"\",\n        nomnaissance: \"\",\n        datenaissance: \"\",\n        villedenaissance: \"\",\n        nationalite: \"\",\n        numerosecurite: \"\",\n        ville: \"\",\n        addresse: \"\",\n        cp: \"\",\n        email: \"\",\n        telephonePerso: \"\",\n        telephoneDomicile: \"\",\n        telephoneUrgence: \"\",\n        rpps: \"\",\n        numeroDepartemental: \"\",\n        departementConseil: \"\",\n        specialitePratiquee: \"\",\n        carnetVaccination: \"\",\n        carteIdentitePassport: \"\",\n        carteVital: \"\",\n        cv: \"\",\n        permisConduire: \"\",\n        assuranceAutomobile: \"\",\n        photo: \"\",\n        RIB: \"\",\n        conseildelordre: \"\",\n        ONCD: \"\",\n        diplomes: \"\",\n        diplomesRh: \"\",\n        RCP: \"\",\n        radioProtectionPatients: \"\",\n        radioProtectionTravailleurs: \"\",\n        matériels: \"\",\n        déclaration: \"\",\n        fichedeposte: \"\",\n        fichesynthetique: \"\",\n        avantagesennature: \"\",\n        mutuelle: \"\",\n        onboarding: \"\",\n        adli: \"\",\n        aptitudeMedicale: \"\",\n        attestationAssuranceHabitation: \"\",\n        autreContratsTravailCours: \"\",\n        lettreMotivation: \"\",\n        carteSejour: \"\",\n        casierJudiciaire: \"\",\n    })\n\n    let history = useHistory();\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState({})\n    const [collabo, setCollabo] = useState({})\n    const [update, setUpdate] = useState({ email: localStorage.getItem(\"name\") })\n    const [updateFile, setUpdateFile] = useState()\n    const [valueEmail, setValueEmail] = useState('')\n    const [dataCollaborateurs, setDataCollaborateurs] = useState([])\n    const [visible, setVisible] = useState(false)\n\n    useEffect(() => {\n        axios.post(\"http://localhost:3000/gestionPerso\", { email: localStorage.getItem(\"name\") })\n            .then(response => {\n                setCollabo(response.data.isCollabo)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios.post(\n                'http://localhost:3000/idCollaborateur', { email: localStorage.getItem(\"name\") },\n            );\n\n            setDataCollaborateurs(result.data);\n        };\n        fetchData();\n    }, []);\n\n\n    //Recuperation du IsCollabo true || False pour faire des conditions //\n    useEffect(() => {\n        if (collabo) {\n            setInformations({\n                prenom: dataFromAPI.name.givenName ? dataFromAPI.name.givenName : \"\",\n                nom: dataFromAPI.name.familyName ? dataFromAPI.name.familyName : \"\",\n                genre: dataFromAPI.customSchemas.Attributs_personnaliss.Sexe ? dataFromAPI.customSchemas.Attributs_personnaliss.Sexe : \"\",\n                nomnaissance: dataFromAPI.name.familyName ? dataFromAPI.name.familyName : \"\",\n                datenaissance: dataFromAPI.customSchemas.Attributs_personnaliss.Date_de_naissance ? dataFromAPI.customSchemas.Attributs_personnaliss.Date_de_naissance : \"\",\n                addresse: dataFromAPI.customSchemas.Attributs_personnaliss.Adresse_personnel ? dataFromAPI.customSchemas.Attributs_personnaliss.Adresse_personnel : \"\",\n                cp: dataFromAPI.customSchemas.Attributs_personnaliss.Code_postal_personnel ? dataFromAPI.customSchemas.Attributs_personnaliss.Code_postal_personnel : \"\",\n                ville: dataFromAPI.customSchemas.Attributs_personnaliss.Commune_personnel ? dataFromAPI.customSchemas.Attributs_personnaliss.Commune_personnel : \"\",\n                villedenaissance: dataFromAPI.customSchemas.Attributs_personnaliss.Lieu_de_naissance ? dataFromAPI.customSchemas.Attributs_personnaliss.Lieu_de_naissance : \"\",\n                numerosecurite: dataFromAPI.customSchemas.Attributs_personnaliss.Scurit_sociale ? dataFromAPI.customSchemas.Attributs_personnaliss.Scurit_sociale : \"\",\n                nationalite: dataFromAPI.customSchemas.Attributs_personnaliss.Nationalit ? dataFromAPI.customSchemas.Attributs_personnaliss.Nationalit : \"\",\n                email: dataFromAPI.emails ? dataFromAPI.emails[0].address : \"\",\n                telephonePerso: dataFromAPI.customSchemas.Attributs_personnaliss.Tlphone_portable_personnel ? dataFromAPI.customSchemas.Attributs_personnaliss.Tlphone_portable_personnel : \"\",\n                telephoneDomicile: dataFromAPI.customSchemas.Attributs_personnaliss.Tlphone_domicile ? dataFromAPI.customSchemas.Attributs_personnaliss.Tlphone_domicile : \"\",\n                telephoneUrgence: dataFromAPI.customSchemas.Attributs_personnaliss.Tlphone__appeler_en_cas_durgence ? dataFromAPI.customSchemas.Attributs_personnaliss.Tlphone__appeler_en_cas_durgence : \"\",\n            })\n        }\n    }, [collabo, dataFromAPI])\n\n    const handleChange = (e, { value, name }) => {\n        setInformations({ ...informations, [e.target.name || name]: value })\n        setUpdate({ ...update, [e.target.name || name]: value })\n        setValueEmail({ ...valueEmail, [name]: value })\n    }\n\n    const handleChangeFile = (e) => {\n        // le regex N°securite Social//\n        setInformations({ ...informations, [e.target.name]: e.target.files[0] })\n        setUpdateFile({ ...updateFile, [e.target.name]: e.target.files[0] })\n    }\n\n    const buttonRedirect = async () => {\n        await axios.post(\"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\", { email: valueEmail.email })\n            .then(res => {\n                setDataFromAPI(res.data)\n                const nomPrenom = valueEmail.email.split(\"@\")[0].replace(\".\", \"/\")\n                history.push(`/collaborateur/${nomPrenom}`)\n            })\n    }\n\n\n    const buttonRedirectRh = async () => {\n        const email = localStorage.getItem(\"name\")\n        await axios.post(\"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\", { email: email })\n            .then(res => {\n                setDataFromAPI(res.data)\n            })\n        const nomPrenom = email.split(\"@\")[0].replace(\".\", \"/\")\n        history.push(`/collaborateur/${nomPrenom}`)\n    }\n\n\n    const sendData = async () => {\n        try {\n            const keys = Object.keys(updateFile)\n            const data = new FormData()\n            for (const i in keys) {\n                data.append(keys[i], updateFile[keys[i]])\n            }\n            const response = await axios({\n                method: 'post',\n                url: 'https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/updateGSuiteUser',\n                data: update\n            })\n            const responseFile = await axios({\n                method: 'post',\n                url: 'http://localhost:3000/file',\n                data: data\n            })\n            setUpdate({})\n            // setInformations(response.data)\n            setMessage('Donnée enregistrer')\n        } catch (error) {\n            console.log(error);\n        }\n        history.push('/ok')\n    }\n\n    return (\n        <>\n            <Menu size='massive'>\n                {collabo ? <Icon className='burger' name=\"bars\" size='large'\n                    onClick={() => setVisible(true)}\n                    label={{ children: <code>visible</code> }}\n                /> : null}\n                <Menu.Item\n                    name='Embarquer'\n                />\n                <Menu.Menu position='right'>\n                    <Menu.Item>\n                        {localStorage.getItem(\"name\")}\n                    </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n            <Grid.Column>\n                <Sidebar.Pushable as={Segment}>\n                    <Sidebar\n                        as={Menu}\n                        animation='overlay'\n                        icon='labeled'\n                        inverted\n                        onHide={() => setVisible(false)}\n                        vertical\n                        visible={visible}\n                        width='wide'\n                    >\n                        <Menu.Item as='a'\n                            name='Mes données'\n                            onClick={buttonRedirectRh}\n                        />\n                        <Menu.Item as='a'>\n                            <Grid>\n                                <Grid.Row>\n                                    <Dropdown\n                                        name='email'\n                                        onChange={handleChange}\n                                        placeholder='Collaborateur'\n                                        fluid\n                                        search\n                                        options={dataCollaborateurs}\n                                    />\n                                    <Button className='buttonRh' size='mini' onClick={buttonRedirect}>Oké</Button>\n                                </Grid.Row>\n                            </Grid>\n                        </Menu.Item>\n                    </Sidebar>\n                    <Sidebar.Pusher dimmed={visible}>\n                        <Container>\n                            {collabo ? <Image src='/rh.jpg' size='huge' centered='true' /> : <Image src='/Embarquer.png' size='huge' centered='true' />}\n                            <Grid.Row>\n                                <Label circular size='massive'>1</Label>\n                                <h3>Informations à remplir par le collaborateur (5/15)</h3>\n                            </Grid.Row>\n                            <Grid columns={3}>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <b>Prenom</b>\n                                        <Form.Input fluid name='prenom' value={informations.prenom} onChange={handleChange} placeholder='Prénom' />\n                                        <br />\n                                        <Form.Input fluid name='datenaissance' value={informations.datenaissance} onChange={handleChange} label='Date de naissance' placeholder='Date de naissance' />\n                                        <br />\n                                        <Form.Input fluid name='addresse' value={informations.addresse} onChange={handleChange} label='Addresse' placeholder='Addresse' />\n                                        <br />\n                                        <Form.Input fluid name='email' value={informations.email} onChange={handleChange} label='Email (personnel)' placeholder='Email (personnel)' />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <Form.Input fluid name='nom' value={informations.nom} onChange={handleChange} label='Nom' placeholder='Nom' />\n                                        <br />\n                                        <Form.Input fluid name='villedenaissance' value={informations.villedenaissance} onChange={handleChange} label='Ville de naissance' placeholder='Ville de naissance' />\n                                        <br />\n                                        <Form.Input fluid name='cp' value={informations.cp} onChange={handleChange} label='Code postal' placeholder='Code postal' />\n                                        <br />\n                                        <Form.Input fluid name='numerosecurite' value={informations.numerosecurite} onChange={handleChange} label='N° sécurite social' placeholder='N° sécurite social' />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        Genre\n                                            <Form.Radio\n                                            fluid\n                                            name=\"genre\"\n                                            label='Homme'\n                                            value={informations.genre}\n                                            checked={informations.genre === 'homme'}\n                                            onChange={handleChange}\n                                        />\n                                        <Form.Radio\n                                            fluid\n                                            name=\"genre\"\n                                            label='Femme'\n                                            value={informations.genre}\n                                            checked={informations.genre === 'femme'}\n                                            onChange={handleChange}\n                                        />\n                                        <br />\n                                        <Form.Input fluid name='nomnaissance' value={informations.nomnaissance} onChange={handleChange} label='Nom de naissance' placeholder='Nom de naissance' />\n                                        <br />\n                                        <Form.Input fluid name='ville' value={informations.ville} onChange={handleChange} label='Ville' placeholder='Ville' />\n                                        <br />\n                                        <Form.Input fluid name='nationalite' value={informations.nationalite} onChange={handleChange} label='Nationalité' placeholder='Nationalité' />\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                            <Grid columns={3} >\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <Form.Input fluid name='telephonePerso' value={informations.telephonePerso} onChange={handleChange} label='Téléphone portable (personnel)' placeholder='Téléphone portable (personnel)' />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <Form.Input fluid name='telephoneDomicile' value={informations.telephoneDomicile} onChange={handleChange} label='Téléphone domicile' placeholder='Téléphone domicile' />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <Form.Input fluid name='telephoneUrgence' value={informations.telephoneUrgence} onChange={handleChange} label=\"Téléphone à appeler en cas d'urgence\" placeholder=\"Téléphone à appeler en cas d'urgence\" />\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                            <Form>\n                                <br />\n                                <Segment className='segmentPerso' size='small'>Réservé aux praticiens (1/4)</Segment>\n                                <Grid columns={3}>\n                                    <Grid.Row>\n                                        <Grid.Column>\n                                            <Form.Input fluid name='rpps' onChange={handleChange} value={informations.rpps} label='N° RPPS' placeholder='N° RPPS' />\n                                            <Form.Input fluid name='numeroDepartemental' value={informations.numeroDepartemental} onChange={handleChange} label='N° Départemental Conseil de l’Ordre' placeholder='N° Départemental Conseil de l’Ordre' />\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Form.Input fluid name='departementConseil' value={informations.departementConseil} onChange={handleChange} label='Département Conseil de l’Ordre' placeholder='Département Conseil de l’Ordre' />\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Form.Input fluid name='specialitePratiquee' value={informations.specialitePratiquee} onChange={handleChange} label='Spécialité pratiquée au centre' placeholder='Spécialité pratiquée au centre' />\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                                <br />\n                                <br />\n                                <h3>Documents à fournir par le collaborateur (10/15)</h3>\n                                <Grid columns={3} divided>\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Carte national ou passport' handleChangeFile={handleChangeFile} name={\"carteIdentitePassport\"} />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Carte Vital' handleChangeFile={handleChangeFile} name=\"carteVital\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='CV' handleChangeFile={handleChangeFile} name=\"cv\" />\n                                </Grid>\n                                <Grid columns={3} divided>\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Carnet Vaccinal' handleChangeFile={handleChangeFile} name=\"carnetVaccination\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Diplômes' handleChangeFile={handleChangeFile} name=\"diplomes\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Photo' handleChangeFile={handleChangeFile} name=\"photo\" />\n                                </Grid>\n                                <Grid columns={3} divided>\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='RIB' handleChangeFile={handleChangeFile} name=\"RIB\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Aptitude médicale au travail' handleChangeFile={handleChangeFile} name=\"aptitudeMedicale\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='permisConduire' handleChangeFile={handleChangeFile} name=\"permisConduire\" />\n                                </Grid>\n                                <Grid columns={3} divided>\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Assurance automobile' handleChangeFile={handleChangeFile} name=\"assuranceAutomobile\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Attestation assurance habitation' handleChangeFile={handleChangeFile} name=\"attestationAssuranceHabitation\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Autres contrats de travail en cours' handleChangeFile={handleChangeFile} name=\"autreContratsTravailCours\" />\n\n                                </Grid>\n                                <Grid columns={3} divided>\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Lettre de motivation' handleChangeFile={handleChangeFile} name=\"lettreMotivation\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Carte de séjour' handleChangeFile={handleChangeFile} name=\"carteSejour\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Extrait de casier judiciaire ' handleChangeFile={handleChangeFile} name=\"casierJudiciaire\" />\n                                </Grid>\n                                <Segment className='segmentPerso' size='small'>Réservé aux praticiens (3/5)</Segment>\n                                <Grid columns={3} divided>\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title=\"Attestion d'assurance RCP\" handleChangeFile={handleChangeFile} name=\"RCP\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title=\"ONCD\" handleChangeFile={handleChangeFile} name=\"ONCD\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title=\"Attestation d’inscription au tableau du conseil de l’Ordre\" handleChangeFile={handleChangeFile} name=\"conseildelordre\" />\n                                </Grid>\n                                <Grid columns={3} divided>\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title='Diplômes' handleChangeFile={handleChangeFile} name=\"diplomesRh\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title=\"Attestation de formation à la Radioprotection patients\" handleChangeFile={handleChangeFile} name=\"radioProtectionPatients\" />\n                                    <InputImageGenerique informations={informations} setInformations={setInformations} title=\"Attestation de formation à la Radioprotection travailleurs\" handleChangeFile={handleChangeFile} name=\"radioProtectionTravailleurs\" />\n                                </Grid>\n                                {collabo !== true ? <Button primary onClick={sendData}>Enregistrer les données</Button> : null}\n                            </Form>\n                            {/* je passe le props  disable et la condition au composant RH (SI collaborateur n'est pas RH je lui donne pas les droits au composant RH) */}\n                            <InputRH dataFromAPI={dataFromAPI} id={informations._id} informationsRH={informations} updateCollaborateur={update} updateFileCollaborateur={updateFile} disable={collabo !== true} />\n                            {message ? <Message positive>\n                                <Message.Header>Donnée enregistrer</Message.Header>\n                            </Message> : null}\n                        </Container>\n                    </Sidebar.Pusher>\n                </Sidebar.Pushable>\n            </Grid.Column>\n\n        </>\n    )\n}\n\n\n\n\n\n","import React from 'react'\nimport { Container } from 'semantic-ui-react'\nimport { useHistory } from \"react-router-dom\";\n\nexport default function End() {\n    let history = useHistory();\n    const redirection = () => {\n        history.push(`/`)\n    }\n    setTimeout(redirection, 5000);\n    return (\n        <Container textAlign='center'>\n            <h1 className='end'>Merci d'avoir utilisé l'application \"Embarquer\"</h1>\n            <p>Vous serez redirigé automatiquement à la page de connection</p>\n        </Container>\n    )\n}\n","import React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Google from './components/googleLogin'\nimport InputCollaborateur from './components/inputCollaborateur';\nimport End from './components/end'\n\n\nfunction App() {\n\n  const [dataFromAPI, setDataFromAPI] = useState({})\n  const [handleChange, setHandleChange] = useState()\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path='/'><Google setDataFromAPI={setDataFromAPI} />\n          </Route>\n          <Route exact path='/collaborateur/:prenom/:nom'><InputCollaborateur dataFromAPI={dataFromAPI} setDataFromAPI={setDataFromAPI} handleChange={handleChange} /></Route>\n          <Route exact path='/ok'><End /></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["config.js","components/googleLogin.js","components/InputImageGenerique.jsx","components/menuDeroulant/genre.js","components/inputImageCv.jsx","components/menuDeroulant/erp.js","components/inputAutocompletGenerique.jsx","components/inputRH.js","components/inputCollaborateur.js","components/end.js","App.js","serviceWorker.js","index.js"],"names":["Google","setDataFromAPI","history","useHistory","responseGoogle","response","a","console","log","profileObj","email","emailResponse","axios","post","then","res","data","split","replace","nomPrenom","localStorage","setItem","config","getItem","push","Image","style","marginTop","src","size","centered","Container","Segment","textAlign","className","icon","clientId","render","renderProps","onClick","disabled","buttonText","onSuccess","onFailure","cookiePolicy","InputImageGenerique","title","name","handleChangeFile","disable","Grid","Column","Row","type","onChange","e","Genre","handleChange","informations","Dropdown","placeholder","fluid","search","selection","value","options","key","text","InputImageCv","multiple","ERP","informationsRH","erp","InputAutocompletGenerique","url","useState","setData","useEffect","get","result","fetchData","InputRh","dataFromAPI","updateCollaborateur","updateFileCollaborateur","materiels","contrat","declaration","fichedeposte","fichesynthetique","avantagesennature","mutuelle","onboarding","fonctiondigitalsecondaire","datePriseDeFonction","telephonetravail","telephonemobile","adressetravail","classification","niveau","coefficient","indice","remunerationbrutemensuelle","remunerationbrutejournaliere","remunerationbruteannuelle","remunerationbrutehoraire","nombreheureshebdomadairedusalarie","nombreheuresmensueldusalarie","activite","emailresponsable","etablissement","juridique","collaborateur","fonctiondigital","convention","naturetravail","tempstravail","setInformations","updateRh","setUpdateRh","updateFileRh","setUpdateFileRh","organizations","description","customSchemas","Attributs_supplementaires","Fonction_digitale_principale","Fonction_digitale_minuscules","map","relations","Etablissement_digital","Attributs_personnaliss","Date_de_la_prise_de_fonction","Activits","Structure_Jurdique","phones","Nature_de_la_relation_de_travail","Classification","Temps_de_travail","Niveau","Convention_collective","Coefficient","Indice","Rmunration_brute_annuelle2","Nombre_dheures_mensuel_du_salari","Rmunration_brute_mensuelle","Rmunration_brute_horaire","Rmunration_brute_journalire","Nombre_dheures_hebdomadaire_du_salari","Formation_ERP_Scurit_Incendie","target","files","sendDataRH","i","object","Object","assign","object2","keys","FormData","sendEmailFile","append","method","errors","columns","Label","circular","Form","Input","label","divided","Button","primary","Presentation","_id","prenom","nom","genre","nomnaissance","datenaissance","villedenaissance","nationalite","numerosecurite","ville","addresse","cp","telephonePerso","telephoneDomicile","telephoneUrgence","rpps","numeroDepartemental","departementConseil","specialitePratiquee","carnetVaccination","carteIdentite","cartePassport","carteSejour","carteVital","cv","diplomes","permisConduire","assuranceAutomobile","photo","RIB","conseildelordre","ONCD","RCP","radioProtectionPatients","radioProtectionTravailleurs","matériels","déclaration","adli","aptitudeMedicale","attestationAssuranceHabitation","autreContratsTravailCours","lettreMotivation","casierJudiciaire","message","setMessage","collabo","setCollabo","update","setUpdate","updateFile","setUpdateFile","valueEmail","setValueEmail","dataCollaborateurs","setDataCollaborateurs","visible","setVisible","isCollabo","givenName","familyName","Sexe","Date_de_naissance","Adresse_personnel","Code_postal_personnel","Commune_personnel","Lieu_de_naissance","Scurit_sociale","Nationalit","emails","address","recoveryPhone","Tlphone_domicile","Tlphone__appeler_en_cas_durgence","buttonRedirect","buttonRedirectRh","sendData","Menu","Icon","children","Item","position","Sidebar","Pushable","as","animation","inverted","onHide","vertical","width","Pusher","dimmed","id","Message","positive","Header","End","setTimeout","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6b8a5e21.chunk.js","sourcesContent":["export default {\n  url: \"https://embarquer-back-dot-projet-test-doctegestio.uc.r.appspot.com\",\n};\n// http://34.77.241.34:3444\"\n//http://localhost:3000\n//https://embarquer-back-dot-projet-test-doctegestio.uc.r.appspot.com\n\n\n//https://test-gcp-iap-dot-projet-test-doctegestio.appspot.com","import React, { useState } from \"react\";\nimport { Container, Image, Segment } from \"semantic-ui-react\";\nimport GoogleLogin from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nexport default function Google({ setDataFromAPI }) {\n  let history = useHistory();\n  //Envoie de la donnée au back//\n  // Utilisation du localStorage pour sauvergarder email apres le click du button google//\n  const responseGoogle = async (response) => {\n    console.log(response);\n    const emailResponse = await response.profileObj.email;\n    //envoie EMAIL RESPONSE  A DIMITRI//\n    await axios\n      .post(\n        \"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\",\n        { email: emailResponse }\n      )\n      .then((res) => {\n        setDataFromAPI(res.data);\n      });\n\n    const nomPrenom = await emailResponse.split(\"@\")[0].replace(\".\", \"/\");\n    localStorage.setItem(\"name\", emailResponse);\n    await axios\n      .post(`${config.url}/gestionPerso`, {\n        email: localStorage.getItem(\"name\"),\n      })\n      .then((response) => {\n        {\n          history.push(`/collaborateur/${nomPrenom}`);\n        }\n      });\n  };\n  return (\n    <div>\n      <Image\n        style={{ marginTop: 100 }}\n        src=\"./Doctegestio.png\"\n        size=\"medium\"\n        centered=\"true\"\n      />\n      <Image\n        src=\"./pcDocte.png\"\n        style={{ marginTop: 30 }}\n        size=\"small\"\n        centered=\"true\"\n      />\n      <Container>\n        <Segment style={{ marginTop: 30 }}>\n          <p style={{ textAlign: \"center\" }}>\n            Nous avons besoin de vous authentifier pour vous donner l'accès à\n            l'application.\n          </p>\n          <div className=\"google\">\n            <GoogleLogin\n              icon=\"false\"\n              clientId=\"738893670779-omra2br2npas2nao7et5p443iu4ajc17.apps.googleusercontent.com\"\n              render={(renderProps) => (\n                <button\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  Se connecter avec Doctegestio\n                </button>\n              )}\n              buttonText=\"Login\"\n              onSuccess={responseGoogle}\n              onFailure={responseGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          </div>\n        </Segment>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nexport default function InputImageGenerique({\n  title,\n  name,\n  handleChangeFile,\n  disable,\n}) {\n  return (\n    <Grid.Column>\n      <Grid.Row>\n        <h4>{title}</h4>\n        <input\n          type=\"file\"\n          name={name}\n          disabled={disable}\n          onChange={(e) => {\n            handleChangeFile(e);\n          }}\n        />\n      </Grid.Row>\n    </Grid.Column>\n  );\n}\n","import React from \"react\";\nimport { Dropdown, Grid } from \"semantic-ui-react\";\n\nexport default function Genre({ handleChange, disable, informations }) {\n  const data = [\n    { key: \"Homme\", value: \"Homme\", text: \"Homme\" },\n    { key: \"Femme\", value: \"Femme\", text: \"Femme\" },\n  ];\n  console.log(informations, \"GENRE\");\n  return (\n    <Grid>\n      <div className=\"autoCompletTitre\">Genre</div>\n      <Dropdown\n        onChange={handleChange}\n        placeholder=\"Genre\"\n        fluid\n        search\n        name=\"genre\"\n        disabled={disable}\n        selection\n        value={informations}\n        options={data}\n      />\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nexport default function InputImageCv({\n  title,\n  name,\n  handleChangeFile,\n  disable,\n}) {\n  return (\n    <Grid.Column>\n      <Grid.Row>\n        <h4>{title}</h4>\n        <input\n          type=\"file\"\n          name={name}\n          disabled={disable}\n          onChange={(e) => {\n            handleChangeFile(e);\n          }}\n          multiple\n        />\n      </Grid.Row>\n    </Grid.Column>\n  );\n}\n","import React from 'react'\nimport { Dropdown, Grid } from 'semantic-ui-react'\n\nconst data = [\n    {\n        key: \"Oui\",\n        text: \"Oui\",\n        value: \"Oui\",\n    },\n    {\n        key: \"Non\",\n        text: \"Non\",\n        value: \"Non\",\n    },\n]\n\nexport default function ERP({ informations, informationsRH, handleChange, disable }) {\n    return (\n        <Grid>\n            <div className='autoCompletTitre'>Formation ERP Sécurité Incendie</div>\n            <Dropdown\n                placeholder='Formation ERP Sécurité Incendie'\n                name=\"erp\"\n                onChange={handleChange}\n                fluid\n                disabled={disable}\n                value={informations.erp || informationsRH.erp}\n                selection\n                options={data}\n            />\n        </Grid>\n    )\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Dropdown } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nexport default function InputAutocompletGenerique({\n  url,\n  informations,\n  informationsRH,\n  title,\n  name,\n  handleChange,\n  disable,\n}) {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(url);\n      setData(result.data);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <Grid>\n      <div className=\"autoCompletTitre\">{title}</div>\n      <Dropdown\n        onChange={handleChange}\n        placeholder={title}\n        fluid\n        search\n        name={name}\n        disabled={disable}\n        selection\n        value={informations[name] || informationsRH[name]}\n        options={data}\n      />\n    </Grid>\n  );\n}\n\n//Mettre le [Name] selectionne le props//\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Container, Form, Label, Button } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport ERP from \"./menuDeroulant/erp\";\nimport axios from \"axios\";\nimport InputImageGenerique from \"./InputImageGenerique\";\nimport InputAutocompletGenerique from \"./inputAutocompletGenerique\";\nimport config from \"../config\";\n\nexport default function InputRh({\n  dataFromAPI,\n  disable,\n  informationsRH,\n  updateCollaborateur,\n  updateFileCollaborateur,\n}) {\n  const [informations, setInformations] = useState({\n    materiels: \"\",\n    contrat: \"\",\n    declaration: \"\",\n    fichedeposte: \"\",\n    fichesynthetique: \"\",\n    avantagesennature: \"\",\n    mutuelle: \"\",\n    onboarding: \"\",\n    fonctiondigitalsecondaire: \"\",\n    datePriseDeFonction: \"\",\n    telephonetravail: \"\",\n    telephonemobile: \"\",\n    adressetravail: \"\",\n    classification: \"\",\n    niveau: \"\",\n    coefficient: \"\",\n    indice: \"\",\n    remunerationbrutemensuelle: \"\",\n    remunerationbrutejournaliere: \"\",\n    remunerationbruteannuelle: \"\",\n    remunerationbrutehoraire: \"\",\n    nombreheureshebdomadairedusalarie: \"\",\n    nombreheuresmensueldusalarie: \"\",\n    /* COMPONENT 'autocomplet' */\n    activite: \"\",\n    emailresponsable: \"\",\n    etablissement: \"\",\n    juridique: \"\",\n    collaborateur: \"\",\n    fonctiondigital: \"\",\n    /* COMPONENT 'menuderoulant' */\n    convention: \"\",\n    erp: \"\",\n    naturetravail: \"\",\n    tempstravail: \"\",\n  });\n\n  console.log(informations, \"RH\");\n\n  let history = useHistory();\n\n  const [updateRh, setUpdateRh] = useState();\n  const [updateFileRh, setUpdateFileRh] = useState();\n\n  useEffect(() => {\n    setInformations({\n      collaborateur: dataFromAPI.organizations\n        ? dataFromAPI.organizations[0].description\n        : \"\",\n      fonctiondigital: dataFromAPI.customSchemas.Attributs_supplementaires\n        .Fonction_digitale_principale\n        ? dataFromAPI.customSchemas.Attributs_supplementaires\n            .Fonction_digitale_principale\n        : \"\",\n      fonctiondigitalsecondaire: dataFromAPI.customSchemas\n        .Attributs_supplementaires.Fonction_digitale_minuscules\n        ? dataFromAPI.customSchemas.Attributs_supplementaires.Fonction_digitale_minuscules.map(\n            (e) => e.value\n          )\n        : \"\",\n      emailresponsable: dataFromAPI.relations\n        ? dataFromAPI.relations[0].value\n        : \"\",\n      etablissement: dataFromAPI.customSchemas.Attributs_supplementaires\n        .Etablissement_digital\n        ? dataFromAPI.customSchemas.Attributs_supplementaires\n            .Etablissement_digital\n        : \"\",\n      datePriseDeFonction: dataFromAPI.customSchemas.Attributs_personnaliss\n        .Date_de_la_prise_de_fonction\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Date_de_la_prise_de_fonction\n        : \"\",\n      activite: dataFromAPI.customSchemas.Attributs_supplementaires.Activits\n        ? dataFromAPI.customSchemas.Attributs_supplementaires.Activits[0].value\n        : \"\",\n      juridique: dataFromAPI.customSchemas.Attributs_supplementaires\n        .Structure_Jurdique\n        ? dataFromAPI.customSchemas.Attributs_supplementaires.Structure_Jurdique\n        : \"\",\n      telephonetravail: dataFromAPI.phones.value\n        ? dataFromAPI.phones[1].value\n        : \"\",\n      naturetravail: dataFromAPI.customSchemas.Attributs_personnaliss\n        .Nature_de_la_relation_de_travail\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Nature_de_la_relation_de_travail\n        : \"\",\n      classification: dataFromAPI.customSchemas.Attributs_personnaliss\n        .Classification\n        ? dataFromAPI.customSchemas.Attributs_personnaliss.Classification\n        : \"\",\n      // telephonemobile: dataFromAPI.phones ? dataFromAPI.phones[2].value : \"\",\n      tempstravail: dataFromAPI.customSchemas.Attributs_personnaliss\n        .Temps_de_travail\n        ? dataFromAPI.customSchemas.Attributs_personnaliss.Temps_de_travail\n        : \"\",\n      niveau: dataFromAPI.customSchemas.Attributs_personnaliss.Niveau\n        ? dataFromAPI.customSchemas.Attributs_personnaliss.Niveau\n        : \"\",\n      // adressetravail: dataFromAPI.addresses ? dataFromAPI.addresses[1].formatted : \"\",\n      convention: dataFromAPI.customSchemas.Attributs_personnaliss\n        .Convention_collective\n        ? dataFromAPI.customSchemas.Attributs_personnaliss.Convention_collective\n        : \"\",\n      coefficient: dataFromAPI.customSchemas.Attributs_personnaliss.Coefficient\n        ? dataFromAPI.customSchemas.Attributs_personnaliss.Coefficient\n        : \"\",\n      indice: dataFromAPI.customSchemas.Attributs_personnaliss.Indice\n        ? dataFromAPI.customSchemas.Attributs_personnaliss.Indice\n        : \"\",\n      remunerationbruteannuelle: dataFromAPI.customSchemas\n        .Attributs_personnaliss.Rmunration_brute_annuelle2\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Rmunration_brute_annuelle2\n        : \"\",\n      nombreheuresmensueldusalarie: dataFromAPI.customSchemas\n        .Attributs_personnaliss.Nombre_dheures_mensuel_du_salari\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Nombre_dheures_mensuel_du_salari\n        : \"\",\n      remunerationbrutemensuelle: dataFromAPI.customSchemas\n        .Attributs_personnaliss.Rmunration_brute_mensuelle\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Rmunration_brute_mensuelle\n        : \"\",\n      remunerationbrutehoraire: dataFromAPI.customSchemas.Attributs_personnaliss\n        .Rmunration_brute_horaire\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Rmunration_brute_horaire\n        : \"\",\n      remunerationbrutejournaliere: dataFromAPI.customSchemas\n        .Attributs_personnaliss.Rmunration_brute_journalire\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Rmunration_brute_journalire\n        : \"\",\n      nombreheureshebdomadairedusalarie: dataFromAPI.customSchemas\n        .Attributs_personnaliss.Nombre_dheures_hebdomadaire_du_salari\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Nombre_dheures_hebdomadaire_du_salari\n        : \"\",\n      erp: dataFromAPI.customSchemas.Attributs_personnaliss\n        .Formation_ERP_Scurit_Incendie\n        ? dataFromAPI.customSchemas.Attributs_personnaliss\n            .Formation_ERP_Scurit_Incendie\n        : \"\",\n    });\n  }, [dataFromAPI]);\n\n  const handleChange = (e, { value, name }) => {\n    setInformations({ ...informations, [e.target.name || name]: value });\n    setUpdateRh({ ...updateRh, [e.target.name || name]: value });\n  };\n\n  const handleChangeFile = (e) => {\n    setInformations({ ...informations, [e.target.name]: e.target.files[0] });\n    setUpdateFileRh({ ...updateFileRh, [e.target.name]: e.target.files[0] });\n  };\n\n  const sendDataRH = async () => {\n    //Fusionner les deux states des deux composants de input//\n    try {\n      const object = Object.assign(updateCollaborateur, updateRh);\n      const object2 = Object.assign(updateFileCollaborateur, updateFileRh);\n      const keys = Object.keys(object2);\n      const data = new FormData();\n      const sendEmailFile = localStorage.getItem(\"name\");\n      data.append(\"email\", sendEmailFile);\n      for (const i in keys) {\n        data.append(keys[i], object2[keys[i]]);\n      }\n      const response = await axios({\n        method: \"post\",\n        url:\n          \"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/updateGSuiteUser\",\n        data: object,\n      });\n      const responseFile = await axios({\n        method: \"post\",\n        url: `${config.url}/file`,\n        data: data,\n      });\n      setUpdateRh({});\n    } catch (error) {\n      console.log(\"Error\", error.response.data.errors);\n    }\n    history.push(\"/ok\");\n  };\n  return (\n    <Container>\n      <Grid columns={2}>\n        <Grid.Row>\n          <Label circular size=\"massive\">\n            2\n          </Label>\n          <h3>Informations à remplir par gestionpersonnel</h3>\n        </Grid.Row>\n      </Grid>\n      <Grid columns={3}>\n        <Grid.Row>\n          <Grid.Column>\n            <InputAutocompletGenerique\n              url={`${config.url}/api/user`}\n              title=\"Type de collaborateur\"\n              name=\"collaborateur\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n            <Form.Input\n              fluid\n              name=\"emailresponsable\"\n              value={\n                informations.emailresponsable || informationsRH.emailresponsable\n              }\n              onChange={handleChange}\n              label=\"Email Responsable\"\n              placeholder=\"Email Responsable\"\n              disabled={disable}\n            />\n            <InputAutocompletGenerique\n              url={`${config.url}/api/activities`}\n              title=\"Activite\"\n              name=\"activite\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <InputAutocompletGenerique\n              url={`${config.url}/api/fonction`}\n              title=\"Fonction digitale principale\"\n              name=\"fonctiondigital\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n            <InputAutocompletGenerique\n              url={`${config.url}/api/etablissement`}\n              title=\"Etablissement digital\"\n              name=\"etablissement\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n            <InputAutocompletGenerique\n              url={`${config.url}/juridiqueData`}\n              title=\"Structure Juridique\"\n              name=\"juridique\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Form.Input\n              fluid\n              name=\"fonctiondigitalsecondaire\"\n              value={\n                informations.fonctiondigitalsecondaire ||\n                informationsRH.fonctiondigitalsecondaire\n              }\n              onChange={handleChange}\n              label=\"Fonction(s) digitale(s) secondaire(s)\"\n              placeholder=\"Fonction(s) digitale(s) secondaire(s)\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\" datePriseDeFonction\"\n              value={\n                informations.datePriseDeFonction ||\n                informationsRH.datePriseDeFonction\n              }\n              onChange={handleChange}\n              label=\"Date de prise de fonction\"\n              placeholder=\"Date de prise de fonction\"\n              disabled={disable}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Grid columns={3}>\n        <Grid.Row>\n          <Grid.Column>\n            <Form.Input\n              fluid\n              name=\"telephonetravail\"\n              value={\n                informations.telephonetravail || informationsRH.telephonetravail\n              }\n              onChange={handleChange}\n              label=\"Téléphone (Travail)\"\n              placeholder=\"Téléphone (Travail)\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"telephonemobile\"\n              value={\n                informations.telephonemobile || informationsRH.telephonemobile\n              }\n              onChange={handleChange}\n              label=\"Téléphone (Mobile)\"\n              placeholder=\"Téléphone (Mobile)\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"adressetravail\"\n              value={\n                informations.adressetravail || informationsRH.adressetravail\n              }\n              onChange={handleChange}\n              label=\"Adresse (Travail)\"\n              placeholder=\"Adresse (Travail)\"\n              disabled={disable}\n            />\n            <br />\n          </Grid.Column>\n          <Grid.Column>\n            <InputAutocompletGenerique\n              url={`${config.url}/natureData`}\n              title=\"Nature de la relation de travail\"\n              name=\"naturetravail\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n            <InputAutocompletGenerique\n              url={`${config.url}/api/tempsTravail`}\n              title=\"Temps travail\"\n              name=\"tempstravail\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n            <InputAutocompletGenerique\n              url={`${config.url}/conventionData`}\n              title=\"Convention Collective\"\n              name=\"convention\"\n              informations={informations}\n              informationsRH={informationsRH}\n              handleChange={handleChange}\n              disable={disable}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Form.Input\n              fluid\n              name=\"classification\"\n              onChange={handleChange}\n              value={\n                informations.classification || informationsRH.classification\n              }\n              label=\"Classification\"\n              placeholder=\"Classification\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"niveau\"\n              onChange={handleChange}\n              value={informations.niveau || informationsRH.niveau}\n              label=\"Niveau\"\n              placeholder=\"Niveau\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"coefficient\"\n              onChange={handleChange}\n              value={informations.coefficient || informationsRH.coefficient}\n              label=\"Coefficient\"\n              placeholder=\"Coefficient\"\n              disabled={disable}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Grid columns={3}>\n        <Grid.Row>\n          <Grid.Column>\n            <Form.Input\n              fluid\n              name=\"indice\"\n              value={informations.indice || informationsRH.indice}\n              onChange={handleChange}\n              label=\"Indice\"\n              placeholder=\"Indice\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"remunerationbrutemensuelle\"\n              value={\n                informations.remunerationbrutemensuelle ||\n                informationsRH.remunerationbrutemensuelle\n              }\n              onChange={handleChange}\n              label=\"Rémunération brute mensuelle\"\n              placeholder=\"Rémunération brute mensuelle\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"remunerationbrutejournaliere\"\n              value={\n                informations.remunerationbrutejournaliere ||\n                informationsRH.remunerationbrutejournaliere\n              }\n              onChange={handleChange}\n              label=\"Rémunération brute journalière\"\n              placeholder=\"Rémunération brute journalière\"\n              disabled={disable}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Form.Input\n              fluid\n              name=\"remunerationbruteannuelle\"\n              value={\n                informations.remunerationbruteannuelle ||\n                informationsRH.remunerationbruteannuelle\n              }\n              onChange={handleChange}\n              label=\"Rémunération brute annuelle\"\n              placeholder=\"Rémunération brute annuelle\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"remunerationbrutehoraire\"\n              value={\n                informations.remunerationbrutehoraire ||\n                informationsRH.remunerationbrutehoraire\n              }\n              onChange={handleChange}\n              label=\"Rémunération brute horaire\"\n              placeholder=\"Rémunération brute horaire\"\n              disabled={disable}\n            />\n            <br />\n            <Form.Input\n              fluid\n              name=\"nombreheureshebdomadairedusalarie\"\n              value={\n                informations.nombreheureshebdomadairedusalarie ||\n                informationsRH.nombreheureshebdomadairedusalarie\n              }\n              onChange={handleChange}\n              label=\"Nombre d'heures hebdomadaire du salarié\"\n              placeholder=\"Nombre d'heures hebdomadaire du salarié\"\n              disabled={disable}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Form.Input\n              fluid\n              name=\"nombreheuresmensueldusalarie\"\n              value={\n                informations.nombreheuresmensueldusalarie ||\n                informationsRH.nombreheureshebdomadairedusalarie\n              }\n              onChange={handleChange}\n              label=\"Nombre d'heures mensuel du salarié\"\n              placeholder=\"Nombre d'heures mensuel du salarié\"\n              disabled={disable}\n            />\n            <br />\n            <ERP\n              handleChange={handleChange}\n              informations={informations}\n              informationsRH={informationsRH}\n              disable={disable}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Form>\n        <h3>Documents à fournir par gestionpersonnel (10/30)</h3>\n\n        <Grid columns={3} divided>\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Chartes d'utilisation de matériels et pratiques\"\n            handleChangeFile={handleChangeFile}\n            name={\"materiels\"}\n          />\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Contrat de travail ou contrat de prestation ou convention de stage et promesse d'embauche\"\n            handleChangeFile={handleChangeFile}\n            name={\"contrat\"}\n          />\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Déclaration préalable à l'embauche (DPAE)\"\n            handleChangeFile={handleChangeFile}\n            name={\"declaration\"}\n          />\n        </Grid>\n        <Grid columns={3} divided>\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Fiche de poste\"\n            handleChangeFile={handleChangeFile}\n            name={\"fichedeposte\"}\n          />\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Fiche signalétique synthétique\"\n            handleChangeFile={handleChangeFile}\n            name={\"fichesynthetique\"}\n          />\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Mise à disposition d'avantages en nature\"\n            handleChangeFile={handleChangeFile}\n            name={\"avantagesennature\"}\n          />\n        </Grid>\n        <Grid columns={3} divided>\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Mutuelle et prévoyance\"\n            handleChangeFile={handleChangeFile}\n            name={\"mutuelle\"}\n          />\n          <InputImageGenerique\n            disable={disable}\n            informations={informations}\n            setInformations={setInformations}\n            title=\"Onboarding\"\n            handleChangeFile={handleChangeFile}\n            name={\"onboarding\"}\n          />\n        </Grid>\n        {disable !== true ? (\n          <Button primary onClick={sendDataRH}>\n            Enregistrer les données\n          </Button>\n        ) : null}\n      </Form>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InputImageGenerique from \"./InputImageGenerique\";\nimport InputAutoCompletGenre from \"./menuDeroulant/genre\";\nimport InputImageCv from \"./inputImageCv\";\nimport InputRH from \"./inputRH\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Menu,\n  Dropdown,\n  Form,\n  Container,\n  Grid,\n  Segment,\n  Button,\n  Message,\n  Image,\n  Label,\n  Sidebar,\n  Icon,\n} from \"semantic-ui-react\";\n\nimport config from \"../config\";\n\nexport default function Presentation({ dataFromAPI, setDataFromAPI }) {\n  console.log(dataFromAPI);\n\n  const [informations, setInformations] = useState({\n    _id: \"\",\n    prenom: \"\",\n    nom: \"\",\n    genre: \"\",\n    nomnaissance: \"\",\n    datenaissance: \"\",\n    villedenaissance: \"\",\n    nationalite: \"\",\n    numerosecurite: \"\",\n    ville: \"\",\n    addresse: \"\",\n    cp: \"\",\n    email: \"\",\n    telephonePerso: \"\",\n    telephoneDomicile: \"\",\n    telephoneUrgence: \"\",\n    rpps: \"\",\n    numeroDepartemental: \"\",\n    departementConseil: \"\",\n    specialitePratiquee: \"\",\n    carnetVaccination: \"\",\n    carteIdentite: \"\",\n    cartePassport: \"\",\n    carteSejour: \"\",\n    carteVital: \"\",\n    cv: \"\",\n    diplomes: \"\",\n    permisConduire: \"\",\n    assuranceAutomobile: \"\",\n    photo: \"\",\n    RIB: \"\",\n    conseildelordre: \"\",\n    ONCD: \"\",\n    RCP: \"\",\n    radioProtectionPatients: \"\",\n    radioProtectionTravailleurs: \"\",\n    matériels: \"\",\n    déclaration: \"\",\n    fichedeposte: \"\",\n    fichesynthetique: \"\",\n    avantagesennature: \"\",\n    mutuelle: \"\",\n    onboarding: \"\",\n    adli: \"\",\n    aptitudeMedicale: \"\",\n    attestationAssuranceHabitation: \"\",\n    autreContratsTravailCours: \"\",\n    lettreMotivation: \"\",\n    casierJudiciaire: \"\",\n    genre: \"\",\n  });\n\n  let history = useHistory();\n  const [message, setMessage] = useState(\"\");\n  // const [error, setError] = useState({});\n  const [collabo, setCollabo] = useState({});\n  const [update, setUpdate] = useState({ email: localStorage.getItem(\"name\") });\n  const [updateFile, setUpdateFile] = useState();\n  const [valueEmail, setValueEmail] = useState(\"\");\n  const [dataCollaborateurs, setDataCollaborateurs] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    axios\n      .post(`${config.url}/gestionPerso`, {\n        email: localStorage.getItem(\"name\"),\n      })\n      .then((response) => {\n        setCollabo(response.data.isCollabo);\n      });\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.post(`${config.url}/idCollaborateur`, {\n        email: localStorage.getItem(\"name\"),\n      });\n\n      setDataCollaborateurs(result.data);\n    };\n    fetchData();\n  }, []);\n\n  //Recuperation du IsCollabo true || False pour faire des conditions //\n  useEffect(() => {\n    if (collabo) {\n      setInformations({\n        prenom: dataFromAPI.name.givenName ? dataFromAPI.name.givenName : \"\",\n        nom: dataFromAPI.name.familyName ? dataFromAPI.name.familyName : \"\",\n        genre: dataFromAPI.customSchemas.Attributs_personnaliss.Sexe\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Sexe\n          : \"\",\n        nomnaissance: dataFromAPI.name.familyName\n          ? dataFromAPI.name.familyName\n          : \"\",\n        datenaissance: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Date_de_naissance\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Date_de_naissance\n          : \"\",\n        addresse: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Adresse_personnel\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Adresse_personnel\n          : \"\",\n        cp: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Code_postal_personnel\n          ? dataFromAPI.customSchemas.Attributs_personnaliss\n              .Code_postal_personnel\n          : \"\",\n        ville: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Commune_personnel\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Commune_personnel\n          : \"\",\n        villedenaissance: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Lieu_de_naissance\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Lieu_de_naissance\n          : \"\",\n        numerosecurite: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Scurit_sociale\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Scurit_sociale\n          : \"\",\n        nationalite: dataFromAPI.customSchemas.Attributs_personnaliss.Nationalit\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Nationalit\n          : \"\",\n        email: dataFromAPI.emails ? dataFromAPI.emails[0].address : \"\",\n\n        telephonePerso: dataFromAPI.recoveryPhone\n          ? dataFromAPI.recoveryPhone\n          : \"\",\n\n        telephoneDomicile: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Tlphone_domicile\n          ? dataFromAPI.customSchemas.Attributs_personnaliss.Tlphone_domicile\n          : \"\",\n        telephoneUrgence: dataFromAPI.customSchemas.Attributs_personnaliss\n          .Tlphone__appeler_en_cas_durgence\n          ? dataFromAPI.customSchemas.Attributs_personnaliss\n              .Tlphone__appeler_en_cas_durgence\n          : \"\",\n      });\n    }\n  }, [collabo, dataFromAPI]);\n\n  console.log(informations, \"API \");\n\n  const handleChange = (e, { value, name }) => {\n    setInformations({ ...informations, [e.target.name || name]: value });\n    setUpdate({ ...update, [e.target.name || name]: value });\n    setValueEmail({ ...valueEmail, [name]: value });\n  };\n\n  const handleChangeFile = (e) => {\n    setInformations({ ...informations, [e.target.name]: e.target.files[0] });\n    setUpdateFile({ ...updateFile, [e.target.name]: e.target.files[0] });\n  };\n\n  const buttonRedirect = async () => {\n    await axios\n      .post(\n        \"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\",\n        { email: valueEmail.email }\n      )\n      .then((res) => {\n        setDataFromAPI(res.data);\n        const nomPrenom = valueEmail.email.split(\"@\")[0].replace(\".\", \"/\");\n        history.push(`/collaborateur/${nomPrenom}`);\n      });\n  };\n\n  const buttonRedirectRh = async () => {\n    const email = localStorage.getItem(\"name\");\n    await axios\n      .post(\n        \"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\",\n        { email: email }\n      )\n      .then((res) => {\n        setDataFromAPI(res.data);\n      });\n    const nomPrenom = email.split(\"@\")[0].replace(\".\", \"/\");\n    history.push(`/collaborateur/${nomPrenom}`);\n  };\n\n  const sendData = async () => {\n    try {\n      const keys = Object.keys(updateFile);\n      const data = new FormData();\n      const sendEmailFile = localStorage.getItem(\"name\");\n      data.append(\"email\", sendEmailFile);\n      for (const i in keys) {\n        data.append(keys[i], updateFile[keys[i]]);\n      }\n      const response = await axios({\n        method: \"post\",\n        url:\n          \"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/updateGSuiteUser\",\n        data: update,\n      });\n      const responseFile = await axios({\n        method: \"post\",\n        url: `${config.url}/file`,\n        data: data,\n      });\n      setUpdate({});\n      // setInformations(response.data)\n      setMessage(\"Donnée enregistrer\");\n    } catch (error) {\n      console.log(error);\n    }\n    history.push(\"/ok\");\n  };\n\n  return (\n    <>\n      <Menu size=\"massive\">\n        {collabo ? (\n          <Icon\n            className=\"burger\"\n            name=\"bars\"\n            size=\"large\"\n            onClick={() => setVisible(true)}\n            label={{ children: <code>visible</code> }}\n          />\n        ) : null}\n        <Menu.Item name=\"Embarquer\" />\n        <Menu.Menu position=\"right\">\n          <Menu.Item>{localStorage.getItem(\"name\")}</Menu.Item>\n        </Menu.Menu>\n      </Menu>\n      <Grid.Column>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            inverted\n            onHide={() => setVisible(false)}\n            vertical\n            visible={visible}\n            width=\"wide\"\n          >\n            <Menu.Item>\n              <h5 className=\"informations\" onClick={buttonRedirectRh}>\n                Mes informations\n              </h5>\n              <h5>Mes collaborateurs</h5>\n\n              <h5>Les collaborateurs de mon périmètre (RH)</h5>\n\n              <Dropdown\n                name=\"email\"\n                onChange={handleChange}\n                placeholder=\"Collaborateur\"\n                fluid\n                search\n                options={dataCollaborateurs}\n              />\n\n              <Button className=\"buttonRh\" size=\"mini\" onClick={buttonRedirect}>\n                Ok\n              </Button>\n            </Menu.Item>\n          </Sidebar>\n          <Sidebar.Pusher dimmed={visible}>\n            <Container>\n              {collabo ? (\n                <Image src=\"/rh.jpg\" size=\"huge\" centered=\"true\" />\n              ) : (\n                <Image src=\"/Embarquer.png\" size=\"huge\" centered=\"true\" />\n              )}\n              <Grid.Row>\n                <Label circular size=\"massive\">\n                  1\n                </Label>\n                <h3>Informations à remplir par le collaborateur (5/15)</h3>\n              </Grid.Row>\n              <Grid columns={3}>\n                <Grid.Row>\n                  <Grid.Column>\n                    <b>Prenom</b>\n                    <Form.Input\n                      fluid\n                      name=\"prenom\"\n                      value={informations.prenom}\n                      onChange={handleChange}\n                      placeholder=\"Prénom\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"datenaissance\"\n                      value={informations.datenaissance}\n                      onChange={handleChange}\n                      label=\"Date de naissance\"\n                      placeholder=\"Date de naissance\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"addresse\"\n                      value={informations.addresse}\n                      onChange={handleChange}\n                      label=\"Addresse\"\n                      placeholder=\"Addresse\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"email\"\n                      value={informations.email}\n                      onChange={handleChange}\n                      label=\"Email (personnel)\"\n                      placeholder=\"Email (personnel)\"\n                    />\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Form.Input\n                      fluid\n                      name=\"nom\"\n                      value={informations.nom}\n                      onChange={handleChange}\n                      label=\"Nom\"\n                      placeholder=\"Nom\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"villedenaissance\"\n                      value={informations.villedenaissance}\n                      onChange={handleChange}\n                      label=\"Ville de naissance\"\n                      placeholder=\"Ville de naissance\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"cp\"\n                      value={informations.cp}\n                      onChange={handleChange}\n                      label=\"Code postal\"\n                      placeholder=\"Code postal\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"numerosecurite\"\n                      value={informations.numerosecurite}\n                      onChange={handleChange}\n                      label=\"N° sécurite social\"\n                      placeholder=\"N° sécurite social\"\n                    />\n                  </Grid.Column>\n                  <Grid.Column>\n                    <InputAutoCompletGenre\n                      title=\"Genre\"\n                      name=\"genre\"\n                      informations={informations.genre}\n                      handleChange={handleChange}\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"nomnaissance\"\n                      value={informations.nomnaissance}\n                      onChange={handleChange}\n                      label=\"Nom de naissance\"\n                      placeholder=\"Nom de naissance\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"ville\"\n                      value={informations.ville}\n                      onChange={handleChange}\n                      label=\"Ville\"\n                      placeholder=\"Ville\"\n                    />\n                    <br />\n                    <Form.Input\n                      fluid\n                      name=\"nationalite\"\n                      value={informations.nationalite}\n                      onChange={handleChange}\n                      label=\"Nationalité\"\n                      placeholder=\"Nationalité\"\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n              <Grid columns={3}>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Form.Input\n                      fluid\n                      name=\"telephonePerso\"\n                      value={informations.telephonePerso}\n                      onChange={handleChange}\n                      label=\"Téléphone portable (personnel)\"\n                      placeholder=\"Téléphone portable (personnel)\"\n                    />\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Form.Input\n                      fluid\n                      name=\"telephoneDomicile\"\n                      value={informations.telephoneDomicile}\n                      onChange={handleChange}\n                      label=\"Téléphone domicile\"\n                      placeholder=\"Téléphone domicile\"\n                    />\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Form.Input\n                      fluid\n                      name=\"telephoneUrgence\"\n                      value={informations.telephoneUrgence}\n                      onChange={handleChange}\n                      label=\"Téléphone à appeler en cas d'urgence\"\n                      placeholder=\"Téléphone à appeler en cas d'urgence\"\n                    />\n                  </Grid.Column>\n                  <Grid.Column></Grid.Column>\n                </Grid.Row>\n              </Grid>\n              <Form>\n                <br />\n                <Segment className=\"segmentPerso\" size=\"small\">\n                  Réservé aux praticiens (1/4)\n                </Segment>\n                <Grid columns={3}>\n                  <Grid.Row>\n                    <Grid.Column>\n                      <Form.Input\n                        fluid\n                        name=\"rpps\"\n                        onChange={handleChange}\n                        value={informations.rpps}\n                        label=\"N° RPPS\"\n                        placeholder=\"N° RPPS\"\n                      />\n                      <Form.Input\n                        fluid\n                        name=\"numeroDepartemental\"\n                        value={informations.numeroDepartemental}\n                        onChange={handleChange}\n                        label=\"N° Départemental Conseil de l’Ordre\"\n                        placeholder=\"N° Départemental Conseil de l’Ordre\"\n                      />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Form.Input\n                        fluid\n                        name=\"departementConseil\"\n                        value={informations.departementConseil}\n                        onChange={handleChange}\n                        label=\"Département Conseil de l’Ordre\"\n                        placeholder=\"Département Conseil de l’Ordre\"\n                      />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Form.Input\n                        fluid\n                        name=\"specialitePratiquee\"\n                        value={informations.specialitePratiquee}\n                        onChange={handleChange}\n                        label=\"Spécialité pratiquée au centre\"\n                        placeholder=\"Spécialité pratiquée au centre\"\n                      />\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                <br />\n                <br />\n                <h3>Documents à fournir par le collaborateur (10/15)</h3>\n                <Grid columns={3} divided>\n                  <Grid.Row>\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Carte national ou passport \"\n                      handleChangeFile={handleChangeFile}\n                      name={\"carteIdentitePassport\"}\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Carte Vital\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"carteVital\"\n                    />\n                    <InputImageCv\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"CV\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"cv\"\n                    />\n                  </Grid.Row>\n                </Grid>\n                <Grid columns={3} divided>\n                  <Grid.Row>\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Carnet Vaccinal\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"carnetVaccination\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Diplômes\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"diplomes\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Photo\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"photo\"\n                    />\n                  </Grid.Row>\n                </Grid>\n                <Grid columns={3} divided>\n                  <Grid.Row>\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"RIB\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"RIB\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Aptitude médicale au travail\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"aptitudeMedicale\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Permis de conduire\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"permisConduire\"\n                    />\n                  </Grid.Row>\n                </Grid>\n                <Grid columns={3} divided>\n                  <Grid.Row>\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Assurance automobile\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"assuranceAutomobile\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Attestation assurance habitation\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"attestationAssuranceHabitation\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Autres contrats de travail en cours\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"autreContratsTravailCours\"\n                    />\n                  </Grid.Row>\n                </Grid>\n                <Grid columns={3} divided>\n                  <Grid.Row>\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Lettre de motivation\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"lettreMotivation\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Carte de séjour\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"carteSejour\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Extrait de casier judiciaire \"\n                      handleChangeFile={handleChangeFile}\n                      name=\"casierJudiciaire\"\n                    />\n                  </Grid.Row>\n                </Grid>\n                <Segment className=\"segmentPerso\" size=\"small\">\n                  Réservé aux praticiens (3/5)\n                </Segment>\n                <Grid columns={3} divided>\n                  <Grid.Row>\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Attestion d'assurance RCP\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"RCP\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"ONCD\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"ONCD\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Attestation d’inscription au tableau du conseil de l’Ordre\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"conseildelordre\"\n                    />\n                  </Grid.Row>\n                </Grid>\n                <Grid columns={3} divided>\n                  <Grid.Row>\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Attestation de formation à la Radioprotection patients\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"radioProtectionPatients\"\n                    />\n                    <InputImageGenerique\n                      informations={informations}\n                      setInformations={setInformations}\n                      title=\"Attestation de formation à la Radioprotection travailleurs\"\n                      handleChangeFile={handleChangeFile}\n                      name=\"radioProtectionTravailleurs\"\n                    />\n                  </Grid.Row>\n                </Grid>\n                {collabo !== true ? (\n                  <Button primary onClick={sendData}>\n                    Enregistrer les données\n                  </Button>\n                ) : null}\n              </Form>\n              {/* je passe le props  disable et la condition au composant RH (SI collaborateur n'est pas RH je lui donne pas les droits au composant RH) */}\n              <InputRH\n                dataFromAPI={dataFromAPI}\n                id={informations._id}\n                informationsRH={informations}\n                updateCollaborateur={update}\n                updateFileCollaborateur={updateFile}\n                disable={collabo !== true}\n              />\n              {message ? (\n                <Message positive>\n                  <Message.Header>Donnée enregistrer</Message.Header>\n                </Message>\n              ) : null}\n            </Container>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Grid.Column>\n    </>\n  );\n}\n","import React from 'react'\nimport { Container } from 'semantic-ui-react'\nimport { useHistory } from \"react-router-dom\";\n\nexport default function End() {\n    let history = useHistory();\n    const redirection = () => {\n        history.push(`/`)\n    }\n    setTimeout(redirection, 5000);\n    return (\n        <Container textAlign='center'>\n            <h1 className='end'>Merci d'avoir utilisé l'application \"Embarquer\"</h1>\n            <p>Vous serez redirigé automatiquement à la page de connection</p>\n        </Container>\n    )\n}\n","import React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Google from './components/googleLogin'\nimport InputCollaborateur from './components/inputCollaborateur';\nimport End from './components/end'\n\n\nfunction App() {\n\n  const [dataFromAPI, setDataFromAPI] = useState({})\n  const [handleChange, setHandleChange] = useState()\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path='/'><Google setDataFromAPI={setDataFromAPI} />\n          </Route>\n          <Route exact path='/collaborateur/:prenom/:nom'><InputCollaborateur dataFromAPI={dataFromAPI} setDataFromAPI={setDataFromAPI} handleChange={handleChange} /></Route>\n          <Route exact path='/ok'><End /></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
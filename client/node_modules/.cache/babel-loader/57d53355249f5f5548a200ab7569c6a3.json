{"ast":null,"code":"var _jsxFileName = \"/Users/shadd/Desktop/jobdoctegestio/client/src/components/googleLogin.js\";\nimport React from 'react';\nimport { Container, Image, Segment } from 'semantic-ui-react';\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from \"react-router-dom\";\nexport default function Google({\n  isAdmin\n}) {\n  let history = useHistory();\n  useEffect(() => {\n    const collboratorResponse = async () => {\n      try {\n        const resultCollaborateur = await axios.post(\"http://localhost:5000/gestionPerso\", {\n          email: localStorage.getItem(\"name\")\n        });\n        setCollabo(resultCollaborateur.data.isCollabo); //remonte le TRUE OR False a APPJS//\n\n        isAdmin(resultCollaborateur.data.isCollabo);\n      } catch (error) {\n        console.log('error');\n      }\n    };\n\n    collboratorResponse();\n  }); //Envoie de la donnée au back//\n  // Utilisation du localStorage pour sauvergarder email apres le click du button google//\n\n  const responseGoogle = response => {\n    const emailResponse = response.rt.$t;\n    const nomPrenom = emailResponse.split(\"@\")[0].replace(\".\", \"/\");\n    localStorage.setItem('name', emailResponse);\n    console.log(\"isAdmin\", isAdmin);\n    {\n      isAdmin === true ? history.push(`/rh`) : history.push(`/collaborateur/${nomPrenom}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    style: {\n      marginTop: 100\n    },\n    src: \"./Doctegestio.png\",\n    size: \"medium\",\n    centered: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    src: \"./pcDocte.png\",\n    style: {\n      marginTop: 30\n    },\n    size: \"small\",\n    centered: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Nous avons besoin de vous authentifier pour vous donner l'acc\\xE8s \\xE0 l'application.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    icon: \"false\",\n    clientId: \"939765445894-gkfl9fd7gpd2vehkhdp1ju8g7760p2ca.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, \"Se connecter avec Doctegestio\"),\n    buttonText: \"Login\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/shadd/Desktop/jobdoctegestio/client/src/components/googleLogin.js"],"names":["React","Container","Image","Segment","GoogleLogin","useHistory","Google","isAdmin","history","useEffect","collboratorResponse","resultCollaborateur","axios","post","email","localStorage","getItem","setCollabo","data","isCollabo","error","console","log","responseGoogle","response","emailResponse","rt","$t","nomPrenom","split","replace","setItem","push","marginTop","textAlign","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Container, Image, Segment } from 'semantic-ui-react'\nimport GoogleLogin from 'react-google-login'\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Google({ isAdmin }) {\n    let history = useHistory();\n\n    useEffect(() => {\n        const collboratorResponse = async () => {\n            try {\n                const resultCollaborateur = await axios.post(\"http://localhost:5000/gestionPerso\", { email: localStorage.getItem(\"name\") })\n                setCollabo(resultCollaborateur.data.isCollabo)\n                //remonte le TRUE OR False a APPJS//\n                isAdmin(resultCollaborateur.data.isCollabo)\n            } catch (error) {\n                console.log('error');\n            }\n\n        }\n        collboratorResponse()\n    })\n\n\n\n    //Envoie de la donnée au back//\n    // Utilisation du localStorage pour sauvergarder email apres le click du button google//\n    const responseGoogle = (response) => {\n        const emailResponse = response.rt.$t;\n        const nomPrenom = emailResponse.split(\"@\")[0].replace(\".\", \"/\")\n        localStorage.setItem('name', emailResponse)\n        console.log(\"isAdmin\", isAdmin)\n        { isAdmin === true ? history.push(`/rh`) : history.push(`/collaborateur/${nomPrenom}`) }\n    }\n    return (\n        <div>\n            <Image style={{ marginTop: 100 }} src='./Doctegestio.png' size='medium' centered='true' />\n            <Image src='./pcDocte.png' style={{ marginTop: 30 }} size='small' centered='true' />\n            <Container>\n                <Segment style={{ marginTop: 30 }}>\n                    <p style={{ textAlign: 'center' }}>Nous avons besoin de vous authentifier pour vous donner l'accès à l'application.</p>\n                    <div className='google'>\n                        <GoogleLogin icon='false'\n                            clientId=\"939765445894-gkfl9fd7gpd2vehkhdp1ju8g7760p2ca.apps.googleusercontent.com\"\n                            render={renderProps => (\n                                <button onClick={renderProps.onClick} disabled={renderProps.disabled}>Se connecter avec Doctegestio</button>\n                            )}\n                            buttonText=\"Login\"\n                            onSuccess={responseGoogle}\n                            onFailure={responseGoogle}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    </div>\n                </Segment>\n            </Container>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
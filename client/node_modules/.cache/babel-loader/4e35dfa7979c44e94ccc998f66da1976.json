{"ast":null,"code":"var _jsxFileName = \"/Users/shadd/Desktop/jobdoctegestio/client/src/components/presentation.js\";\nimport React, { useState } from 'react';\nimport AutocompletCorrespondant from './Autocomplet';\nimport { Form } from 'semantic-ui-react';\nexport default function Presentation() {\n  const [value, setValue] = useState(\"\");\n  const [informations, setInformations] = useState({\n    prenom: \"\",\n    nom: \"\",\n    genre: \"\",\n    operateur: \"\"\n  });\n\n  const handleChange = (e, {\n    value,\n    name\n  }) => setInformations({ ...informations,\n    [e.target.name || name]: value\n  });\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    name: \"prenom\",\n    onChange: handleChange,\n    label: \"Prenom\",\n    placeholder: \"Prenom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    name: \"nom\",\n    onChange: handleChange,\n    label: \"Nom\",\n    placeholder: \"Nom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"genre\",\n    label: \"Homme\",\n    value: \"homme\",\n    checked: value === 'homme',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"genre\",\n    label: \"Femme\",\n    value: \"femme\",\n    checked: value === 'femme',\n    onClick: e => setValue(e.target.value),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Op\\xE9rateurs ?\"), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Doctegestio\",\n    value: \"doctegestio\",\n    checked: value === 'doctegestio',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Doctocare\",\n    value: \"doctocare\",\n    checked: value === 'doctocare',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Amapa\",\n    value: \"amapa\",\n    checked: value === 'amapa',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Poppins\",\n    value: \"poppins\",\n    checked: value === 'poppins',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AutocompletCorrespondant, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/shadd/Desktop/jobdoctegestio/client/src/components/presentation.js"],"names":["React","useState","AutocompletCorrespondant","Form","Presentation","value","setValue","informations","setInformations","prenom","nom","genre","operateur","handleChange","e","name","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport AutocompletCorrespondant from './Autocomplet'\nimport { Form } from 'semantic-ui-react'\n\n\n\nexport default function Presentation() {\n    const [value, setValue] = useState(\"\");\n    const [informations, setInformations] = useState({\n        prenom: \"\",\n        nom: \"\",\n        genre: \"\",\n        operateur: \"\"\n\n    })\n\n    const handleChange = (e, { value, name }) => setInformations({ ...informations, [e.target.name || name]: value })\n\n    return (\n        <Form>\n            <Form.Group widths='equal'>\n                <Form.Input fluid name='prenom' onChange={handleChange} label='Prenom' placeholder='Prenom' />\n                <Form.Input fluid name='nom' onChange={handleChange} label='Nom' placeholder='Nom' />\n                <Form.Radio\n                    name=\"genre\"\n                    label='Homme'\n                    value='homme'\n                    checked={value === 'homme'}\n                    onChange={handleChange}\n                />\n                <Form.Radio\n                    name=\"genre\"\n                    label='Femme'\n                    value='femme'\n                    checked={value === 'femme'}\n                    onClick={(e) => setValue(e.target.value)}\n                    onChange={handleChange}\n                />\n            </Form.Group>\n            <Form.Group inline>\n                <label>Op√©rateurs ?</label>\n                <Form.Radio\n                    name=\"operateur\"\n                    label='Doctegestio'\n                    value='doctegestio'\n                    checked={value === 'doctegestio'}\n                    onChange={handleChange}\n                />\n                <Form.Radio\n                    name=\"operateur\"\n                    label='Doctocare'\n                    value='doctocare'\n                    checked={value === 'doctocare'}\n                    onChange={handleChange}\n                />\n                <Form.Radio\n                    name=\"operateur\"\n                    label='Amapa'\n                    value='amapa'\n                    checked={value === 'amapa'}\n                    onChange={handleChange}\n                />\n                <Form.Radio\n                    name=\"operateur\"\n                    label='Poppins'\n                    value='poppins'\n                    checked={value === 'poppins'}\n                    onChange={handleChange}\n                />\n                <AutocompletCorrespondant />\n            </Form.Group>\n        </Form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
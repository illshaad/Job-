{"ast":null,"code":"var _jsxFileName = \"/Users/shadd/Desktop/jobdoctegestio/client/src/components/presentation.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AutocompletCorrespondant from './Autocomplet';\nimport Informations from './informations';\nimport Message from './MessagePositive';\nimport { Form, Container, Grid, Segment, Button } from 'semantic-ui-react';\nexport default function Presentation() {\n  const [informations, setInformations] = useState({\n    prenom: \"\",\n    nom: \"\",\n    genre: \"\",\n    operateur: \"\",\n    correspondant: \"\",\n    carnetVaccination: \"\",\n    carteIdentitePassport: \"\",\n    carteVital: \"\",\n    CV: \"\",\n    permisConduire: \"\",\n    assuranceAutomobile: \"\",\n    photo: \"\",\n    RIB: \"\"\n  });\n  const [message, setMessage] = useState('');\n\n  const handleChange = (e, {\n    value,\n    name\n  }) => setInformations({ ...informations,\n    [e.target.name || name]: value\n  });\n\n  const handleChangeFile = e => {\n    setInformations({ ...informations,\n      [e.target.name]: e.target.files[0]\n    });\n  };\n\n  const sendData = () => {\n    const data = new FormData();\n    data.append('prenom', informations.prenom);\n    data.append('nom', informations.nom);\n    data.append('genre', informations.genre);\n    data.append('operateur', informations.operateur);\n    data.append('correspondant', informations.correspondant);\n    data.append('carnetVaccination', informations.carnetVaccination);\n    data.append('carteIdentitePassport', informations.carteIdentitePassport);\n    data.append('carteVital', informations.carteVital);\n    data.append('CV', informations.CV);\n    data.append('permisConduire', informations.permisConduire);\n    data.append('assuranceAutomobile', informations.assuranceAutomobile);\n    data.append('photo', informations.photo);\n    data.append('RIB', informations.RIB);\n    axios({\n      method: 'post',\n      url: 'http://localhost:3000/upload',\n      data: data\n    }).then(function (reponse) {\n      setMessage('Donn√©e enregistrer');\n    }).catch(function (erreur) {\n      console.log(erreur);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, message ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }\n  }) : null, /*#__PURE__*/React.createElement(Grid, {\n    columns: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    name: \"prenom\",\n    onChange: handleChange,\n    label: \"Prenom\",\n    placeholder: \"Prenom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    name: \"nom\",\n    onChange: handleChange,\n    label: \"Nom\",\n    placeholder: \"Nom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Genre\", /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"genre\",\n    label: \"Homme\",\n    value: \"homme\",\n    checked: informations.genre === 'homme',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"genre\",\n    label: \"Femme\",\n    value: \"femme\",\n    checked: informations.genre === 'femme',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Segment, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Les Op\\xE9rateurs & N+1\"), /*#__PURE__*/React.createElement(Form.Group, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Doctegestio\",\n    value: \"doctegestio\",\n    checked: informations.operateur === 'doctegestio',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Doctocare\",\n    value: \"doctocare\",\n    checked: informations.operateur === 'doctocare',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Amapa\",\n    value: \"amapa\",\n    checked: informations.operateur === 'amapa',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Radio, {\n    name: \"operateur\",\n    label: \"Poppins\",\n    value: \"poppins\",\n    checked: informations.operateur === 'poppins',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(AutocompletCorrespondant, {\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Informations, {\n    handleChangeFile: handleChangeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: sendData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Enregistrer\"));\n}","map":{"version":3,"sources":["/Users/shadd/Desktop/jobdoctegestio/client/src/components/presentation.js"],"names":["React","useState","useEffect","axios","AutocompletCorrespondant","Informations","Message","Form","Container","Grid","Segment","Button","Presentation","informations","setInformations","prenom","nom","genre","operateur","correspondant","carnetVaccination","carteIdentitePassport","carteVital","CV","permisConduire","assuranceAutomobile","photo","RIB","message","setMessage","handleChange","e","value","name","target","handleChangeFile","files","sendData","data","FormData","append","method","url","then","reponse","catch","erreur","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport AutocompletCorrespondant from './Autocomplet'\nimport Informations from './informations'\nimport Message from './MessagePositive'\nimport { Form, Container, Grid, Segment, Button } from 'semantic-ui-react'\n\nexport default function Presentation() {\n    const [informations, setInformations] = useState({\n        prenom: \"\",\n        nom: \"\",\n        genre: \"\",\n        operateur: \"\",\n        correspondant: \"\",\n        carnetVaccination: \"\",\n        carteIdentitePassport: \"\",\n        carteVital: \"\",\n        CV: \"\",\n        permisConduire: \"\",\n        assuranceAutomobile: \"\",\n        photo: \"\",\n        RIB: \"\",\n    })\n\n    const [message, setMessage] = useState('')\n\n\n    const handleChange = (e, { value, name }) => setInformations({ ...informations, [e.target.name || name]: value })\n\n    const handleChangeFile = (e) => {\n        setInformations({ ...informations, [e.target.name]: e.target.files[0] })\n    }\n\n    const sendData = () => {\n        const data = new FormData()\n        data.append('prenom', informations.prenom)\n        data.append('nom', informations.nom)\n        data.append('genre', informations.genre)\n        data.append('operateur', informations.operateur)\n        data.append('correspondant', informations.correspondant)\n        data.append('carnetVaccination', informations.carnetVaccination)\n        data.append('carteIdentitePassport', informations.carteIdentitePassport)\n        data.append('carteVital', informations.carteVital)\n        data.append('CV', informations.CV)\n        data.append('permisConduire', informations.permisConduire)\n        data.append('assuranceAutomobile', informations.assuranceAutomobile)\n        data.append('photo', informations.photo)\n        data.append('RIB', informations.RIB)\n        axios({\n            method: 'post',\n            url: 'http://localhost:3000/upload',\n            data: data\n        })\n            .then(function (reponse) {\n                setMessage('Donn√©e enregistrer')\n            })\n            .catch(function (erreur) {\n                console.log(erreur);\n            });\n    }\n\n    return (\n        <Container>\n            {message ? <Message /> : null}\n            <Grid columns='equal'>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Form.Input fluid name='prenom' onChange={handleChange} label='Prenom' placeholder='Prenom' />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Input fluid name='nom' onChange={handleChange} label='Nom' placeholder='Nom' />\n                    </Grid.Column>\n                    <Grid.Column>\n                        Genre\n                        <Form.Radio\n                            name=\"genre\"\n                            label='Homme'\n                            value='homme'\n                            checked={informations.genre === 'homme'}\n                            onChange={handleChange}\n                        />\n                        <Form.Radio\n                            name=\"genre\"\n                            label='Femme'\n                            value='femme'\n                            checked={informations.genre === 'femme'}\n                            onChange={handleChange}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Form>\n                <br />\n                <Segment textAlign='center'>Les Op√©rateurs & N+1</Segment>\n                <Form.Group inline>\n                    <Form.Radio\n                        name=\"operateur\"\n                        label='Doctegestio'\n                        value='doctegestio'\n                        checked={informations.operateur === 'doctegestio'}\n                        onChange={handleChange}\n                    />\n                    <Form.Radio\n                        name=\"operateur\"\n                        label='Doctocare'\n                        value='doctocare'\n                        checked={informations.operateur === 'doctocare'}\n                        onChange={handleChange}\n                    />\n                    <Form.Radio\n                        name=\"operateur\"\n                        label='Amapa'\n                        value='amapa'\n                        checked={informations.operateur === 'amapa'}\n                        onChange={handleChange}\n                    />\n                    <Form.Radio\n                        name=\"operateur\"\n                        label='Poppins'\n                        value='poppins'\n                        checked={informations.operateur === 'poppins'}\n                        onChange={handleChange}\n                    />\n                    <AutocompletCorrespondant handleChange={handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Informations handleChangeFile={handleChangeFile} />\n                </Form.Group>\n                <Form.Group >\n                </Form.Group>\n            </Form>\n            <Button primary onClick={sendData}>Enregistrer</Button>\n        </Container >\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/gramos/Desktop/Job-/client/src/components/googleLogin.js\";\nimport React, { useState } from \"react\";\nimport { Container, Image, Segment } from \"semantic-ui-react\";\nimport GoogleLogin from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nexport default function Google({\n  setDataFromAPI\n}) {\n  let history = useHistory(); //Envoie de la donnée au back//\n  // Utilisation du localStorage pour sauvergarder email apres le click du button google//\n\n  const responseGoogle = async response => {\n    const emailResponse = await response.rt; //envoie EMAIL RESPONSE  A DIMITRI//\n\n    await axios.post(\"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\", {\n      email: emailResponse\n    }).then(res => {\n      setDataFromAPI(res.data);\n    });\n    const nomPrenom = await emailResponse.split(\"@\")[0].replace(\".\", \"/\");\n    localStorage.setItem(\"name\", emailResponse);\n    await axios.post(\"http://localhost:3000/gestionPerso\", {\n      email: localStorage.getItem(\"name\")\n    }).then(response => {\n      {\n        history.push(`/collaborateur/${nomPrenom}`);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    style: {\n      marginTop: 100\n    },\n    src: \"./Doctegestio.png\",\n    size: \"medium\",\n    centered: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    src: \"./pcDocte.png\",\n    style: {\n      marginTop: 30\n    },\n    size: \"small\",\n    centered: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    style: {\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Nous avons besoin de vous authentifier pour vous donner l'acc\\xE8s \\xE0 l'application.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    icon: \"false\",\n    clientId: \"939765445894-gkfl9fd7gpd2vehkhdp1ju8g7760p2ca.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Se connecter avec Doctegestio\"),\n    buttonText: \"Login\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/gramos/Desktop/Job-/client/src/components/googleLogin.js"],"names":["React","useState","Container","Image","Segment","GoogleLogin","useHistory","axios","Google","setDataFromAPI","history","responseGoogle","response","emailResponse","rt","post","email","then","res","data","nomPrenom","split","replace","localStorage","setItem","getItem","push","marginTop","textAlign","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Image, Segment } from \"semantic-ui-react\";\nimport GoogleLogin from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Google({ setDataFromAPI }) {\n  let history = useHistory();\n  //Envoie de la donnée au back//\n  // Utilisation du localStorage pour sauvergarder email apres le click du button google//\n  const responseGoogle = async (response) => {\n    const emailResponse = await response.rt;\n    //envoie EMAIL RESPONSE  A DIMITRI//\n    await axios\n      .post(\n        \"https://gsuite-api-dot-projet-test-doctegestio.uc.r.appspot.com/getGsuiteUser\",\n        { email: emailResponse }\n      )\n      .then((res) => {\n        setDataFromAPI(res.data);\n      });\n\n    const nomPrenom = await emailResponse.split(\"@\")[0].replace(\".\", \"/\");\n    localStorage.setItem(\"name\", emailResponse);\n    await axios\n      .post(\"http://localhost:3000/gestionPerso\", {\n        email: localStorage.getItem(\"name\"),\n      })\n      .then((response) => {\n        {\n          history.push(`/collaborateur/${nomPrenom}`);\n        }\n      });\n  };\n  return (\n    <div>\n      <Image\n        style={{ marginTop: 100 }}\n        src=\"./Doctegestio.png\"\n        size=\"medium\"\n        centered=\"true\"\n      />\n      <Image\n        src=\"./pcDocte.png\"\n        style={{ marginTop: 30 }}\n        size=\"small\"\n        centered=\"true\"\n      />\n      <Container>\n        <Segment style={{ marginTop: 30 }}>\n          <p style={{ textAlign: \"center\" }}>\n            Nous avons besoin de vous authentifier pour vous donner l'accès à\n            l'application.\n          </p>\n          <div className=\"google\">\n            <GoogleLogin\n              icon=\"false\"\n              clientId=\"939765445894-gkfl9fd7gpd2vehkhdp1ju8g7760p2ca.apps.googleusercontent.com\"\n              render={(renderProps) => (\n                <button\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  Se connecter avec Doctegestio\n                </button>\n              )}\n              buttonText=\"Login\"\n              onSuccess={responseGoogle}\n              onFailure={responseGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          </div>\n        </Segment>\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}